{
  "agents": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "<b><i><span style='color:red'>(Updated in v8.0)</span></i></b> Returns a list of Agents",
      "operationId": "getAgents",
      "description": "This method will return a list of all agents currently configured in the business unit. <br/><br/><b><i><span style='color:red'>v8.0 NOTE: </span></i></b>Response fields have been added to support Email Inbox functionality<div class='tabs_wrapper' data-path='admin_agents_getAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/updatedSinceNew"
        },
        {
          "$ref": "#/definitions/parameters/isActiveNew"
        },
        {
          "$ref": "#/definitions/parameters/searchStringNew"
        },
        {
          "$ref": "#/definitions/parameters/fieldsNew"
        },
        {
          "$ref": "#/definitions/parameters/skipNew"
        },
        {
          "$ref": "#/definitions/parameters/topNew"
        },
        {
          "$ref": "#/definitions/parameters/orderByNew"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "title": "AgentsResultSet",
            "type": "object",
            "properties": {
              "resultSet": {
                "schema": {
                  "title": "resultSet",
                  "description": "Payload Container",
                  "properties": {
                    "_links": {
                      "schema": {
                        "title": "_links",
                        "description": "Links used to parse paginated response",
                        "properties": {
                          "self": {
                            "type": "string",
                            "format": "URL",
                            "description": " Link to same page of results"
                          },
                          "next": {
                            "type": "string",
                            "format": "URL",
                            "description": " Link to next page of results"
                          },
                          "previous": {
                            "type": "string",
                            "format": "URL",
                            "description": " Link to previous page of results"
                          }
                        }
                      }
                    },
                    "businessUnitId": {
                      "type": "integer",
                      "description": "ID of Business Unit",
                      "required": true
                    },
                    "lastPollTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call",
                      "required": true
                    },
                    "totalRecords": {
                      "type": "integer",
                      "description": "Total number of records in the payload",
                      "required": true
                    },
                    "agents": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "title": "agents",
                        "description": "",
                        "properties": {
                          "agentId": {
                            "type": "integer",
                            "description": "ID of the Agent",
                            "required": true
                          },
                          "userName": {
                            "type": "string",
                            "description": "User name for the Agent",
                            "required": true
                          },
                          "firstName": {
                            "type": "string",
                            "description": "First name of the Agent",
                            "required": true
                          },
                          "middleName": {
                            "type": "string",
                            "description": "Middle name of the Agent",
                            "required": true
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of the Agent",
                            "required": true
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "Email address of the Agent",
                            "required": true
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Indicates if Agent is active",
                            "required": true
                          },
                          "teamId": {
                            "type": "integer",
                            "description": "ID of the Team for the Agent",
                            "required": true
                          },
                          "teamName": {
                            "type": "string",
                            "description": "Name of the Team for the Agent",
                            "required": true
                          },
                          "reportToId": {
                            "type": "integer",
                            "description": "ID of the manager the Agent reports to",
                            "required": true
                          },
                          "reportToName": {
                            "type": "string",
                            "description": "Name of the manager the Agent reports to",
                            "required": true
                          },
                          "isSupervisor": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is a Supervisor",
                            "required": true
                          },
                          "lastLogin": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time of last login for Agent",
                            "required": true
                          },
                          "lastUpdated": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was last updated",
                            "required": true
                          },
                          "location": {
                            "type": "string",
                            "description": "Location for Agent",
                            "required": true
                          },
                          "custom1": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom2": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom3": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom4": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom5": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "internalId": {
                            "type": "string",
                            "description": "Custom ID associated with Agent",
                            "required": true
                          },
                          "profileId": {
                            "type": "integer",
                            "description": "ID of the Security Profile assigned to the Agent",
                            "required": true
                          },
                          "profileName": {
                            "type": "string",
                            "description": "Name of the Security Profile assigned to the Agent",
                            "required": true
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "Timezone assigned to the Agent",
                            "required": true
                          },
                          "country": {
                            "type": "string",
                            "description": "Country assigned to the Agent",
                            "required": true
                          },
                          "countryName": {
                            "type": "string",
                            "description": "Proper name of Country assigned to the Agent",
                            "required": true
                          },
                          "state": {
                            "type": "string",
                            "description": "State or Province assigned to the Agent",
                            "required": true
                          },
                          "city": {
                            "type": "string",
                            "description": "Name of City assigned to the Agent",
                            "required": true
                          },
                          "chatRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a chat contact",
                            "required": true
                          },
                          "phoneRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a phone contact",
                            "required": true
                          },
                          "workItemRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a workitem contact",
                            "required": true
                          },
                          "defaultDialingPattern": {
                            "type": "integer",
                            "description": "ID of Dialing Pattern assigned to the Agent",
                            "required": true
                          },
                          "defaultDialingPatternName": {
                            "type": "string",
                            "description": "Name of Dialing Pattern assigned to the Agent",
                            "required": true
                          },
                          "teamDefaultMaxChats": {
                            "type": "boolean",
                            "description": "Indicates if Agent uses Team settings for max chats",
                            "required": true
                          },
                          "maxConcurrentChats": {
                            "type": "integer",
                            "description": "Indicates number of chat contacts the Agent can accept concurrently",
                            "required": true
                          },
                          "notes": {
                            "type": "string",
                            "description": "Notes associated with the Agent",
                            "required": true
                          },
                          "createDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was created",
                            "required": true
                          },
                          "inactiveDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent was marked inactive",
                            "required": true
                          },
                          "hireDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was hired",
                            "required": true
                          },
                          "terminationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was terminated",
                            "required": true
                          },
                          "hourlyCost": {
                            "type": "double",
                            "description": "Cost of Agent",
                            "required": true
                          },
                          "rehireStatus": {
                            "type": "boolean",
                            "description": "Indicates is the Agent is a re-hire",
                            "required": true
                          },
                          "employmentType": {
                            "type": "integer",
                            "description": "ID of the employment type",
                            "required": true
                          },
                          "employmentTypeName": {
                            "type": "string",
                            "description": "Name of the employment type",
                            "enum": [
                              "Full-Time",
                              "Part-Time",
                              "Temporary",
                              "Outsources",
                              "Other"
                            ],
                            "required": true
                          },
                          "referral": {
                            "type": "string",
                            "description": "Description of any referral given",
                            "required": true
                          },
                          "atHome": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is an at home worker",
                            "required": true
                          },
                          "hiringSource": {
                            "type": "string",
                            "description": "Source of Agent hiring",
                            "required": true
                          },
                          "ntLoginName": {
                            "type": "string",
                            "description": "",
                            "required": true
                          },
                          "scheduleNotification": {
                            "type": "integer",
                            "description": "Time between work schedule notifications",
                            "required": true,
                            "enum": [
                              "5",
                              "10",
                              "15"
                            ]
                          },
                          "federatedId": {
                            "type": "string",
                            "description": "ID of Agent in external Identity Provider.  Used with Federated Identity Management functionality",
                            "required": true
                          },
                          "sipUser": {
                            "type": "string",
                            "description": "Used to associate the Agent with a Skype for Business user.  Used with the inContact Gateway for Skype for Business",
                            "required": true
                          },
                          "useTeamMaxEmailInboxCount": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates if the Agent uses the Team default value",
                            "required": true
                          },
                          "maxEmailInboxCount": {
                            "type": "integer",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Maximum number of Emails an Agent can have in their inbox.  A number between 1 and 25",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid '{0}' - '{1}'"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    },
    "post": {
      "tags": [ "Agents" ],
      "summary": "Create an Agent",
      "operationId": "CreateAnAgent",
      "description": "This method will create new Agents in the business unit.<br/><br/><b>NOTE: </b>This method will return a 200 response on any properly formatted request.  You will need to check the \"errorCount\" value in the response payload to determine if each of the Agents submitted completed successfully or not.<div class='tabs_wrapper' data-path='admin_agents_postAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "Content Body",
          "required": true,
          "allowMultiple": true,
          "schema": {
            "$ref": "#/definitions/postAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postAgentsResponse"
          }
        },
        "400": {
          "description": "<p>Cannot create more than {0} agents at a time</p><p>Invalid agents - cannot be null or empty</p>"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "agents_agentId": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "<b><i><span style='color:red'>(Updated in v8.0)</span></i></b> Returns an Agent details",
      "operationId": "getAgentById",
      "description": "This method will return the key attributes for the Agent specified by \"agentId\". <br/><br/><b><i><span style='color:red'>v8.0 NOTE: </span></i></b>Response fields have been added to support Email Inbox functionality<div class='tabs_wrapper' data-path='admin_agents_getAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/fieldsNew"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "title": "AgentsResultSet",
            "type": "object",
            "properties": {
              "resultSet": {
                "schema": {
                  "title": "resultSet",
                  "description": "Payload Container",
                  "properties": {
                    "_links": {
                      "schema": {
                        "title": "_links",
                        "description": "Links used to parse paginated response",
                        "properties": {
                          "self": {
                            "type": "string",
                            "format": "URL",
                            "description": " Link to same page of results"
                          },
                          "next": {
                            "type": "string",
                            "format": "URL",
                            "description": " Link to next page of results"
                          },
                          "previous": {
                            "type": "string",
                            "format": "URL",
                            "description": " Link to previous page of results"
                          }
                        }
                      }
                    },
                    "businessUnitId": {
                      "type": "integer",
                      "format": "int64",
                      "description": "ID of Business Unit",
                      "required": true
                    },
                    "lastPollTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call",
                      "required": true
                    },
                    "totalRecords": {
                      "type": "integer",
                      "description": "Total number of records in the payload",
                      "required": true
                    },
                    "agents": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "title": "agents",
                        "description": "",
                        "properties": {
                          "agentId": {
                            "type": "integer",
                            "description": "ID of the Agent",
                            "required": true
                          },
                          "userName": {
                            "type": "string",
                            "description": "User name for the Agent",
                            "required": true
                          },
                          "firstName": {
                            "type": "string",
                            "description": "First name of the Agent",
                            "required": true
                          },
                          "middleName": {
                            "type": "string",
                            "description": "Middle name of the Agent",
                            "required": true
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of the Agent",
                            "required": true
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "Email address of the Agent",
                            "required": true
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Indicates if Agent is active",
                            "required": true
                          },
                          "teamId": {
                            "type": "integer",
                            "description": "ID of the Team for the Agent",
                            "required": true
                          },
                          "teamName": {
                            "type": "string",
                            "description": "Name of the Team for the Agent",
                            "required": true
                          },
                          "reportToId": {
                            "type": "integer",
                            "description": "ID of the manager the Agent reports to",
                            "required": true
                          },
                          "reportToName": {
                            "type": "string",
                            "description": "Name of the manager the Agent reports to",
                            "required": true
                          },
                          "isSupervisor": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is a Supervisor",
                            "required": true
                          },
                          "lastLogin": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time of last login for Agent",
                            "required": true
                          },
                          "lastUpdated": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was last updated",
                            "required": true
                          },
                          "location": {
                            "type": "string",
                            "description": "Location for Agent",
                            "required": true
                          },
                          "custom1": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom2": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom3": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom4": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom5": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "internalId": {
                            "type": "string",
                            "description": "Custom ID associated with Agent",
                            "required": true
                          },
                          "profileId": {
                            "type": "integer",
                            "description": "ID of the Security Profile assigned to the Agent",
                            "required": true
                          },
                          "profileName": {
                            "type": "string",
                            "description": "Name of the Security Profile assigned to the Agent",
                            "required": true
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "Timezone assigned to the Agent",
                            "required": true
                          },
                          "country": {
                            "type": "string",
                            "description": "Country assigned to the Agent",
                            "required": true
                          },
                          "countryName": {
                            "type": "string",
                            "description": "Proper name of Country assigned to the Agent",
                            "required": true
                          },
                          "state": {
                            "type": "string",
                            "description": "State or Province assigned to the Agent",
                            "required": true
                          },
                          "city": {
                            "type": "string",
                            "description": "Name of City assigned to the Agent",
                            "required": true
                          },
                          "chatRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a chat contact",
                            "required": true
                          },
                          "phoneRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a phone contact",
                            "required": true
                          },
                          "workItemRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a workitem contact",
                            "required": true
                          },
                          "defaultDialingPattern": {
                            "type": "integer",
                            "description": "ID of Dialing Pattern assigned to the Agent",
                            "required": true
                          },
                          "defaultDialingPatternName": {
                            "type": "string",
                            "description": "Name of Dialing Pattern assigned to the Agent",
                            "required": true
                          },
                          "teamDefaultMaxChats": {
                            "type": "boolean",
                            "description": "Indicates if Agent uses Team settings for max chats",
                            "required": true
                          },
                          "maxConcurrentChats": {
                            "type": "integer",
                            "description": "Indicates number of chat contacts the Agent can accept concurrently",
                            "required": true
                          },
                          "notes": {
                            "type": "string",
                            "description": "Notes associated with the Agent",
                            "required": true
                          },
                          "createDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was created",
                            "required": true
                          },
                          "inactiveDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent was marked inactive",
                            "required": true
                          },
                          "hireDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was hired",
                            "required": true
                          },
                          "terminationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was terminated",
                            "required": true
                          },
                          "hourlyCost": {
                            "type": "double",
                            "description": "Cost of Agent",
                            "required": true
                          },
                          "rehireStatus": {
                            "type": "boolean",
                            "description": "Indicates is the Agent is a re-hire",
                            "required": true
                          },
                          "employmentType": {
                            "type": "integer",
                            "description": "ID of the employment type",
                            "required": true
                          },
                          "employmentTypeName": {
                            "type": "string",
                            "description": "Name of the employment type",
                            "enum": [
                              "Full-Time",
                              "Part-Time",
                              "Temporary",
                              "Outsources",
                              "Other"
                            ],
                            "required": true
                          },
                          "referral": {
                            "type": "string",
                            "description": "Description of any referral given",
                            "required": true
                          },
                          "atHome": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is an at home worker",
                            "required": true
                          },
                          "hiringSource": {
                            "type": "string",
                            "description": "Source of Agent hiring",
                            "required": true
                          },
                          "ntLoginName": {
                            "type": "string",
                            "description": "",
                            "required": true
                          },
                          "scheduleNotification": {
                            "type": "integer",
                            "description": "Time between work schedule notifications",
                            "required": true,
                            "enum": [
                              "5",
                              "10",
                              "15"
                            ]
                          },
                          "federatedId": {
                            "type": "string",
                            "description": "ID of Agent in external Identity Provider.  Used with Federated Identity Management functionality",
                            "required": true
                          },
                          "sipUser": {
                            "type": "string",
                            "description": "Used to associate the Agent with a Skype for Business user.  Used with the inContact Gateway for Skype for Business",
                            "required": true
                          },
                          "useTeamMaxEmailInboxCount": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates if the Agent uses the Team default value",
                            "required": true
                          },
                          "maxEmailInboxCount": {
                            "type": "integer",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Maximum number of Emails an Agent can have in their inbox.  A number between 1 and 25",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid '{0}' - '{1}'"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}', does not exist</p><p>Invalid agentId - '{0}'</p>"
        }
      }

    },
    "put": {
      "tags": [ "Agents" ],
      "summary": "Update an Agent",
      "operationId": "UpdateAnAgent",
      "description": "This method will update the attributes for the Agent specified by agentId.<div class='tabs_wrapper' data-path='admin_agents_putAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "in": "body",
          "name": "Content Body",
          "required": true,
          "allowMultiple": true,
          "schema": {
            "$ref": "#/definitions/putAgentRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid {0} - {1}</p><p>Invalid {0} - '{1}', must be unique</p><p>Invalid {0} - maximum length is {1} characters</p><p>Invalid {0} - '{1}', does not exist</p><p>Invalid {0} - '{1}', must be an integer</p><p>Invalid {0} cannot be null or empty</p><p>Invalid {0} - '{1}', must be a double</p>"
        },
        "402": {
          "description": "Maximum active user limit of '{0}' has been reached"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>{0} - '{1}' is restricted</p><p>Cannot set {0}, {1} feature is not enabled for this business unit </p>"
        },
        "404": {
          "description": "Invalid agentId - {0}"
        }
      }
    }
  },
  "agents-agentId-state": {
    "post": {
      "tags": [ "Agents" ],
      "summary": "Sets an Agent's State",
      "operationId": "SetAgentState",
      "description": "This method will set the state of the Agent who owns the session specified by sessionId.<br><br>An Agent can only be set to either \"Available\" or \"Unavailable\"  state.  The other Agent States are controlled by the platform as it route contacts or as the Agent logs in and out of the platform. There is only one \"Available\" state, but there are multiple reasons an Agent can be in the \"Unavailable\" state as described below:</p><ol style='margin-left: 20px; list-style-type: decimal'><li style='list-style-type: decimal'>The Agent can be in the default \"Unavailable\" state with no reason code. This is the state when an agent session is started.<br/></li><li style='list-style-type: decimal'>The Agent can be assigned a reason code for being \"Unavailable\" from a collection of reasons known as \"unavailable codes\". These unavailable codes are created by the customer. For example, they may have an \"On Break\" unavailable code, a \"Lunch\" unavailable code, or a \"Training\" unavailable code, etc.  These unavailable codes can be retrieved from the <b><i><a href='AdminAPI#!/Agents/getTeamUnavailableCodes'>GET /teams/{teamId}/unavailable-codes</a></i></b> method.<br/></li><li style='list-style-type: decimal'>The Agent can be in an \"After Contact Work\" (ACW) state. These are special unavailable states that are created by the customer on the inContact platform, and are unavailable codes with the \"ACW\" flag. These unavailable codes can only be used as \"reason\" if the Agent is handling an active contact, otherwise the API will return a 409 error</li></ol><p>Unavailable codes that are \"ACW\" states will have the \"isAcw\" flag set to \"true\". Note that ACW unavailable codes can also have an auto-timeout, which is used by the platform to automatically end the ACW unavailable code and move the Agent to their \"next\" state. You can use this to display a countdown timer to the Agent when the ACW unavailable code begins, enabling the Agent to see how much time they have before the ACW unavailable code ends.</p><p>Setting the Agent’s session to an ACW unavailable code causes the Agent to go into an \"Unavailable\" state during which the time is counted against the active interaction time, even though the interaction with the Patron has ended. While in this state, the Agent will not be delivered other interactions (because they are \"Unavailable\"), but the time is recorded as \"work\" time for the interaction that just ended.<div class='tabs_wrapper' data-path='admin_agents_postState.html'></div></p></span>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "name": "state",
          "description": "Agent State (Available or Unavailable)",
          "required": true,
          "type": "string",
          "enum": [
            "Available",
            "Unavailable"
          ],
          "in": "query"
        },
        {
          "name": "outStateId",
          "description": "Unavailable code, if the requested state is Unavailable.",
          "type": "integer",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid state - '{0}', Must be either \"Available\" or \"Unavailable\"</p><p>Invalid outStateId - '{0}', Invalid Unavailable Code</p><p>Invalid outStateId - '{0}', must be an integer </p>"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}', is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}', Agent session not started</p><p>Invalid agentId - '{0}'</p>"
        },
        "409": {
          "description": "Invalid state - '{0}'"
        }
      }
    }
  },
  "agents_skills": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns Skills assigned to all Agents",
      "nickname": "AllAgentSkillAssignments",
      "description": "This method will return the skill mappings for all agents currently configured in the business unit.<div class='tabs_wrapper' data-path='admin_agents_getSkills.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/searchStringNew"
        },
        {
          "name": "mediaTypeId",
          "description": "Filters results by Media Type",
          "type": "integer",
          "in": "query"
        },
        {
          "name": "outboundStrategy",
          "description": "Filters based on outbound strategy for the Skill",
          "type": "string",
          "in": "query",
          "enum": [
            "Manual",
            "Personal Connection"
          ]
        },
        {
          "name": "isSkillActive",
          "description": "Filters based on active state of the Skill",
          "type": "boolean",
          "in": "query"
        },
        {
          "$ref": "#/definitions/parameters/skipNew"
        },
        {
          "$ref": "#/definitions/parameters/topNew"
        },
        {
          "$ref": "#/definitions/parameters/orderByNew"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentsSkillsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid Fields List</p><p>Invalid Updated Since</p>"
        },
        "401": {
          "description": "Unauthorized"
        }
      }
    }
  },
  "agents_agentId_skills": {
    "post": {
      "tags": [ "Agents" ],
      "summary": "Assigns Skills to an Agent",
      "operationId": "AssignsSkillsToAnAgent",
      "description": "This method will create new skill assignments for the Agent identified by agentId.<div class='tabs_wrapper' data-path='admin_agents_postSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postAgentSkillsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postAgentSkillsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty</p><p>Cannot send more than 10,000 records in a single call</p>"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}', {1}</p><p>Invalid agentId - '{0}'</p>"
        }
      }
    },
    "put": {
      "tags": [ "Agents" ],
      "summary": "Modify Skill assignments for an Agent",
      "operationId": "ModifySkillAssignmentsForAgent",
      "description": "This method will modify the skill assignments for the Agent identified by agentId.<div class='tabs_wrapper' data-path='admin_agents_putSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/putAgentSkillsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postAgentSkillsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty</p><p>Cannot send more than 10,000 records in a single call</p>"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}', {1}</p><p>Invalid agentId - '{0}'</p>"
        }
      }
    },
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns Skills assigned to an Agent",
      "operationId": "getSkillsByAgentId",
      "description": "This method will return the skill mappings for the Agent specified by agentId.<div class='tabs_wrapper' data-path='admin_agents_getSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/mediaTypeIdNew"
        },
        {
          "$ref": "#/definitions/parameters/outboundStrategyNew"
        },
        {
          "$ref": "#/definitions/parameters/isSkillActiveNew"
        },
        {
          "$ref": "#/definitions/parameters/searchStringNew"
        },
        {
          "$ref": "#/definitions/parameters/skipNew"
        },
        {
          "$ref": "#/definitions/parameters/topNew"
        },
        {
          "$ref": "#/definitions/parameters/orderByNew"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentSkillsResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}'</p><p>Invalid agentId - '{0}', does not exist</p>"
        }
      }
    },
    "delete": {
      "tags": [ "Agents" ],
      "summary": "Remove Skill assignments for an Agent",
      "operationId": "RemoveSkillAssignmentsForAgent",
      "description": "This method will remove the skill assignments for the Agent specified by agentId.<div class='tabs_wrapper' data-path='admin_agents_deleteSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/deleteAgentSkillsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postAgentSkillsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty </p><p>Cannot send more than {0} records in a single call</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Agent - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}', must be an integer</p><p>Invalid agentId - '{0}', does not exist</p>"
        }
      }
    }
  },
  "agents-agentId-skills-unassigned": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns Skills not assigned to an Agent",
      "operationId": "GetSkillsNotAssignedToAgent",
      "description": "This method will return the Skills that are not currently assigned to the Agent specified by agentId.<div class='tabs_wrapper' data-path='admin_agents_getUnassignedSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/mediaTypeId"
        },
        {
          "$ref": "#/definitions/parameters/outboundStrategy"
        },
        {
          "$ref": "#/definitions/parameters/isSkillActive"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentUnassignedSkillsResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}'</p><p>Invalid agentId - '{0}', does not exist</p>"
        }
      }
    }
  },
  "agents_skills_data": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns summary of all agent's contacts by skill",
      "operationId": "Agent Skill Data",
      "description": "This method will return summary information about the contacts handled for each skill assigned to an agent over the period of time specified by \"startDate\" and \"endDate\". This information will be returned for all agents in the business unit that were active during that time period.<br/><br/>This information is updated in 15 minute increments starting at the top of each hour therefore the API will only accept times in 15 minute increments.  If you span multiple 15 minute increments, the data is cumulated and then returned.<br/><br/><b>NOTE:</b> \"startDate\" and \"endDate\" should be ISO 8601 compliant: yyyy-mm-ddThh:mm:ss+/-hh:mm and cannot span more than 30 days and can only be in 15 minute increments starting at the top of the hour.<div class='tabs_wrapper' data-path='admin_agents_getSkillsData.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/startDate"
        },
        {
          "$ref": "#/definitions/parameters/endDate"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentSkillsDataResponse"
          }
        },
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Not Found"
        }
      }
    }
  },
  "agents_agentId_skill_data": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns summary of an agent's contacts by skill",
      "operationId": "Agent Skill Data",
      "description": "This method will return summary information about the contacts handled for each skill assigned to an agent identified by agentId over the period of time specified by \"startDate\" and \"endDate\". This information will be returned only if the agent was active during that time period.<br/><br/>This information is updated in 15 minute increments starting at the top of each hour therefore the API will only accept times in 15 minute increments. If you span multiple 15 minute increments, the data is cumulated and then returned.<br/><br/><b>NOTE:</b> \"startDate\" and \"endDate\" should be ISO 8601 compliant: yyyy-mm-ddThh:mm:ss+/-hh:mm and cannot span more than 30 days and can only be in 15 minute increments starting at the top of the hour.<div class='tabs_wrapper' data-path='admin_agents_getSkillsAgentIDData.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/startDate"
        },
        {
          "$ref": "#/definitions/parameters/endDate"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentSkillsDataResponse"
          }
        },
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Not Found"
        }
      }

    }
  },
  "agents_agentId_custom_event": {
    "put": {
      "tags": [ "Agents" ],
      "summary": "Creates a Custom Agent Event",
      "opeartionId": "Custom Agent Event",
      "description": "This method allows you to send an event to the agent identified by agentId.  This event has no system triggers but can be called at any point from an external application.<br/><br/>If the agent identified by agentId is not currently logged in, the event will either be ignored or remain for the agent once they log back in.  This is controlled using the persistInMemory parameter. <div class='tabs_wrapper' data-path='admin_agents_putCustomEventID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "name": "eventName",
          "description": "A type name you want to give the custom event.  Multiple events with the same name will overwrite each other.  Only the last (most recent) instance of each event name is kept.",
          "type": "string",
          "in": "query"
        },
        {
          "name": "persistInMemory",
          "description": "Controls whether or not the VC keeps the event in memory.",
          "type": "boolean",
          "default": true,
          "enum": [ "true", "false" ],
          "in": "query"
        },
        {
          "name": "data",
          "description": "Data payload for this event.",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agents_quick_replies": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns a list of Quick Replies",
      "operationId": "Quick Replies",
      "description": "This method enables you to return all of the Quick Replies that are available in the Business Unit and a list of Skills that each Quick Reply is associated with.<div class='tabs_wrapper' data-path='admin_agents_getQuickReplies.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentsQuickRepliesResponse"
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient permissions"
        }
      }
    }
  },
  "agents_agentId_quick_replies": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns a list of Quick Replies for an Agent",
      "operationId": "Quick Replies by Agent",
      "description": "This method enables you to return all of the Quick Replies that are available to an Agent identified by agentId and a list of Skills that each Quick Reply is associated with for that Agent.<div class='tabs_wrapper' data-path='admin_agents_getQuickRepliesbyAgentId.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentQuickRepliesResponse"
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient permissions"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agents_agentId_messages": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns an Agent Message List",
      "operationId": "Agent Message List",
      "description": "This method will return all messages currently queued for the agent specified by agentId.<div class='tabs_wrapper' data-path='admin_agents_getMessages.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentMessagesResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agents_agentId_indicators": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns an Agent Indicator List",
      "operationId": "Agent Indicator List",
      "description": "This method will return all indicators currently queued for the agent specified by agentId.<div class='tabs_wrapper' data-path='admin_agents_getIndicators.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentIndicatorsResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agents_agentId_logout": {
    "post": {
      "tags": [ "Agents" ],
      "summary": "Forces an agent session to end",
      "operationId": "agentLogout",
      "description": "This can be useful if an agent has left their computer, and remains logged in, or if an agent session somehow becomes \"stuck\" and the agent is not able to log off using agent software (a rare occurrence).<div class='tabs_wrapper' data-path='admin_agents_postAgentIDLogout.html'></div>",
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        }
      ],
      "responses": {
        "202": {
          "description": "Accepted"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient permissions"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agent-patterns": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns Agent Dialing patterns",
      "operationId": "GetAgentDialingPatterns",
      "responseClass": "",
      "description": "This method will return a list of all possible Agent Dialing patterns that can be used for an Agent.  These are the valid patterns that can be used for the <a href='AgentAPI#!/Agents/CreateAnAgent'>POST /agents</a> and <a href='AgentAPI#!/Agents/UpdateAnAgent'>PUT /agents/{agentId}</a> methods to create or change an Agent.<div class='tabs_wrapper' data-path='admin_agent_getAgentPatterns.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentPatternsResponse"
          }
        },
        "204": {
          "description": "No dialing patterns configured"
        },
        "401": {
          "description": "<p>Unauthorized</p><p>Invalid or expired token</p>"
        },
        "403": {
          "description": "Forbidden. Check Security Profile permissions"
        }
      }
    }
  },
  "agents_states": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns a list of Agent States",
      "operationId": "getPermissions",
      "description": "This method will return a list of all possible Agent States that can be used for an Agent.  These are the valid states that can be used for the <a href='AgentAPI#!/Sessions/setAgentStatus'>POST /agent-sessions/{sessionId}/state</a> method to change the state of an Agent.<div class='tabs_wrapper' data-path='admin_general_getAgentStates.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentStatesResponse"
          }
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Security privileges prevent access to data"
        },
        "500": {
          "description": "InternalServerError"
        }
      }
    }
  },
  "teams": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "<b><i><span style='color:red'>(Updated in v8.0)</span></i></b> Returns a list of Teams",
      "operationsId": "getTeams",
      "description": "This method returns a list of details for all teams in the business unit.<br/><br/><b><i><span style='color:red'>v8.0 NOTE: </span></i></b>Response fields have been added to support Email Inbox and inView product functionality.<div class='tabs_wrapper' data-path='admin_agents_getTeams.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/isActiveNew"
        },
        {
          "$ref": "#/definitions/parameters/searchStringNew"
        },
        {
          "$ref": "#/definitions/parameters/skipNew"
        },
        {
          "$ref": "#/definitions/parameters/topNew"
        },
        {
          "$ref": "#/definitions/parameters/orderByNew"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "title": "TeamsResultSet",
            "type": "object",
            "properties": {
              "resultSet": {
                "schema": {
                  "title": "resultSet",
                  "description": "Payload Container",
                  "properties": {
                    "_links": {
                      "schema": {
                        "title": "_links",
                        "description": "Links used to parse paginated response",
                        "properties": {
                          "self": {
                            "type": "string",
                            "format": "URL",
                            "description": " Link to same page of results"
                          },
                          "next": {
                            "type": "string",
                            "format": "URL",
                            "description": " Link to next page of results"
                          },
                          "previous": {
                            "type": "string",
                            "format": "URL",
                            "description": " Link to previous page of results"
                          }
                        }
                      }
                    },
                    "businessUnitId": {
                      "type": "integer",
                      "format": "int64",
                      "description": "ID of Business Unit",
                      "required": true
                    },
                    "lastPollTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call",
                      "required": true
                    },
                    "totalRecords": {
                      "type": "integer",
                      "description": "Total number of records in the payload",
                      "required": true
                    },
                    "teams": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "title": "teams",
                        "description": "",
                        "properties": {
                          "teamId": {
                            "type": "integer",
                            "description": "ID of the Team",
                            "required": true
                          },
                          "teamName": {
                            "type": "string",
                            "description": "Name of the Team",
                            "required": true
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Indicates if Team is active",
                            "required": true
                          },
                          "description": {
                            "type": "string",
                            "description": "Description associated with the Team",
                            "required": true
                          },
                          "notes": {
                            "type": "string",
                            "description": "Notes associated with the Team",
                            "required": true
                          },
                          "lastUpdateTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Team record was last updated",
                            "required": true
                          },
                          "inViewEnabled": {
                            "type": "boolean",
                            "description": "Indicates the Team can use inView",
                            "required": true
                          },
                          "wfoEnabled": {
                            "type": "boolean",
                            "description": "Indicates the Team can use WFO",
                            "required": true
                          },
                          "wfmEnabled": {
                            "type": "boolean",
                            "description": "Indicates the Team can use WFM",
                            "required": true
                          },
                          "qmEnabled": {
                            "type": "boolean",
                            "description": "Indicates the Team can use QM",
                            "required": true
                          },
                          "maxConcurrentChats": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Maximum number of concurrent chats for Agents in this Team",
                            "required": true
                          },
                          "agentCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of Agents assigned to Team",
                            "required": true
                          },
                          "maxEmailInboxCount": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Maximum number of concurrent Emails a Team can handle",
                            "required": true
                          },
                          "inViewGamificationEnabled": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView Gamificattion",
                            "required": true
                          },
                          "inViewChatEnabled": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView chat",
                            "required": true
                          },
                          "inViewLMSEnabled": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView LMS",
                            "required": true
                          },
                          "analyticsEnabled": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team will use inContact Analytics",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        },
        "404": {
          "description": "Invalid teamId - '{0}'"
        }
      }
    },
    "post": {
      "tags": [ "Agents" ],
      "summary": "Create a Team",
      "operationId": "CreateATeam",
      "description": "This method will create a new Team in the business unit.<div class='tabs_wrapper' data-path='admin_agents_postTeams.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postTeamsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postTeamsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid teamName - {0}</p><p>Invalid isActive - {0}</p><p>Invalid maxConcurrentChats - {0}. Maximum value is 8</p><p>Invalid wfoEnabled - {0}</p><p>Invalid wfm2Enabled - {0}</p><p>Invalid qm2Enabled - {0}</p><p>Invalid inViewEnabled - {0}</p><p>Invalid notes - Too long.  Maximum length is 2000 characters</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>WFO feature is not enabled for this business unit</p><p>inView feature is not enabled for this business unit</p><p>WFO feature is enabled for this business unit</p><p>WFM feature is not enabled for this business unit</p><p>QM feature is not enabled for this business unit</p><p>Security permissions prevent access to data</p>"
        }
      }
    }
  },
  "teams_teamId": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "<b><i><span style='color:red'>(Updated in v8.0)</span></i></b> Returns a Team",
      "operationId": "getTeamById",
      "description": "This method returns a list of details for the Team specified by \"teamId\" and includes an array of elements containing information about the Agents assigned to that Team.<br/><br/><b><i><span style='color:red'>v8.0 NOTE: </span></i></b>Response fields have been added to support Email Inbox and inView product functionality.<div class='tabs_wrapper' data-path='admin_agents_getTeamID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "title": "TeamsResultSet",
            "type": "object",
            "properties": {
              "resultSet": {
                "schema": {
                  "title": "resultSet",
                  "description": "Payload Container",
                  "properties": {
                    "businessUnitId": {
                      "type": "integer",
                      "description": "ID of Business Unit",
                      "required": true
                    },
                    "lastPollTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call",
                      "required": true
                    },
                    "teams": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "title": "teams",
                        "description": "",
                        "properties": {
                          "teamId": {
                            "type": "integer",
                            "description": "ID of the Team",
                            "required": true
                          },
                          "teamName": {
                            "type": "string",
                            "description": "Name of the Team",
                            "required": true
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Indicates if Team is active",
                            "required": true
                          },
                          "description": {
                            "type": "string",
                            "description": "Description associated with the Team",
                            "required": true
                          },
                          "notes": {
                            "type": "string",
                            "description": "Notes associated with the Team",
                            "required": true
                          },
                          "lastUpdateTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Team record was last updated",
                            "required": true
                          },
                          "inViewEnabled": {
                            "type": "boolean",
                            "description": "Indicates the Team can use inView",
                            "required": true
                          },
                          "wfoEnabled": {
                            "type": "boolean",
                            "description": "Indicates the Team can use WFO",
                            "required": true
                          },
                          "wfmEnabled": {
                            "type": "boolean",
                            "description": "Indicates the Team can use WFM",
                            "required": true
                          },
                          "qmEnabled": {
                            "type": "boolean",
                            "description": "Indicates the Team can use QM",
                            "required": true
                          },
                          "maxConcurrentChats": {
                            "type": "integer",
                            "description": "Maximum number of concurrent chats for Agents in this Team",
                            "required": true
                          },
                          "agentCount": {
                            "type": "integer",
                            "description": "Number of Agents assigned to Team",
                            "required": true
                          },
                          "maxEmailInboxCount": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Maximum number of concurrent Emails a Team can handle",
                            "required": true
                          },
                          "inViewGamificationEnabled": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView Gamificattion",
                            "required": true
                          },
                          "inViewChatEnabled": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView chat",
                            "required": true
                          },
                          "inViewLMSEnabled": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView LMS",
                            "required": true
                          },
                          "analyticsEnabled": {
                            "type": "boolean",
                            "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team will use inContact Analytics",
                            "required": true
                          }
                        }
                      }
                    },
                    "agents": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "title": "agents",
                        "description": "",
                        "properties": {
                          "agentId": {
                            "type": "integer",
                            "description": "ID of the Agent",
                            "required": true
                          },
                          "firstName": {
                            "type": "string",
                            "description": "First name of the Agent",
                            "required": true
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of the Agent",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Team - {0} is restricted</p>"
        },
        "404": {
          "description": "Invalid teamId - {0}"
        }
      }
    },
    "put": {
      "tags": [ "Agents" ],
      "summary": "Update a Team",
      "operationId": "UpdateTeamById",
      "description": "This method updates the Team specified by teamId.<div class='tabs_wrapper' data-path='admin_agents_putTeamID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/putTeamsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid teamName - {0}</p><p>Invalid isActive - {0}</p><p>Invalid maxConcurrentChats - {0}. Maximum value is 8</p><p>Invalid wfoEnabled - {0}</p><p>Invalid wfm2Enabled - {0}</p><p>Invalid qm2Enabled - {0}</p><p>Invalid inViewEnabled - {0}</p><p>Invalid notes - Too long. Maximum length is 2000 characters</p><p>Invalid forceInactive - {0}</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>WFO feature is not enabled for this business unit</p><p>inView feature is not enabled for this business unit</p><p>WFO feature is enabled for this business unit</p><p>WFM feature is not enabled for this business unit</p><p>QM feature is not enabled for this business unit</p><p>Security permissions prevent access to data</p><p>Team - {0} is restricted</p>"
        },
        "404": {
          "description": "Invalid teamId - {0}"
        },
        "409": {
          "description": "Cannot make a Team with active Agents inactive. Use forceInactive to make all Agents in Team inactive"
        }
      }
    }
  },
  "teams-teamId-agents": {
    "post": {
      "tags": [ "Agents" ],
      "summary": "Assign Agents to a Team",
      "operationId": "AssignAgentsToTeam",
      "description": "This method assigns the Agents in the agents parameter to the Team identified by teamId.<div class='tabs_wrapper' data-path='admin_agents_postTeamAgentsID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postTeamAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postTeamAgentsResponse"
          }
        },
        "400": {
          "description": "<p>Cannot send more than 10,000 records in a single call</p><p>Invalid agents - cannot be null or empty</p>"
        },
        "403": {
          "description": "<p>Team - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid teamId - {0}"
        }
      }
    },
    "delete": {
      "tags": [ "Agents" ],
      "summary": "Remove Agents from a Team",
      "operationId": "RemoveAgentsFromTeam",
      "description": "This method deletes the Agents in the agents parameter from the Team identified by teamId.<div class='tabs_wrapper' data-path='admin_agents_deleteTeamAgentsID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "name": "transferTeamId",
          "description": "ID of Team the removed Agents will be assigned to. All Agents must be assigned to a Team",
          "required": true,
          "type": "integer",
          "in": "query"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postTeamAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/deleteTeamAgentsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid transferTeamId - {0}</p><p>Invalid agents - cannot be null or empty</p><p>Cannot send more than 10,000 records in a single call</p>"
        },
        "403": {
          "description": "<p>Team - '{0}' is restricted</p><p>TransferTeam - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid teamId - {0}"
        }
      }
    },
    "get": {
      "tags": [ "Agents" ],
      "summary": "<b><i><span style='color:red'>(Updated in v8.0)</span></i></b> Returns a Teams' Agents",
      "operationId": "GetTeamsAgentsByTeamId",
      "description": "This method returns the full list of Teams including the Agents on each of the Teams.<br/><br/><b><i><span style='color:red'>v8.0 NOTE: </span></i></b>Response fields have been added to support Email Inbox and inView product functionality.<div class='tabs_wrapper' data-path='admin_agents_getTeamAgentsID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "title": "TeamsResultSet",
            "type": "object",
            "properties": {
              "teams": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "teams",
                  "description": "",
                  "properties": {
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team",
                      "required": true
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Team is active",
                      "required": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description associated with the Team",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Team",
                      "required": true
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Team record was last updated",
                      "required": true
                    },
                    "inViewEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView",
                      "required": true
                    },
                    "wfoEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use WFO",
                      "required": true
                    },
                    "wfmEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use WFM",
                      "required": true
                    },
                    "qmEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use QM",
                      "required": true
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum number of concurrent chats for Agents in this Team",
                      "required": true
                    },
                    "agentCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of Agents assigned to Team",
                      "required": true
                    },
                    "maxEmailInboxCount": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Maximum number of concurrent Emails a Team can handle",
                      "required": true
                    },
                    "inViewGamificationEnabled": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView Gamificattion",
                      "required": true
                    },
                    "inViewChatEnabled": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView chat",
                      "required": true
                    },
                    "inViewLMSEnabled": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView LMS",
                      "required": true
                    },
                    "analyticsEnabled": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team will use inContact Analytics",
                      "required": true
                    },
                    "agents": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "title": "agents",
                        "description": "",
                        "properties": {
                          "agentId": {
                            "type": "integer",
                            "description": "ID of the Agent",
                            "required": true
                          },
                          "userName": {
                            "type": "string",
                            "description": "User name for the Agent",
                            "required": true
                          },
                          "firstName": {
                            "type": "string",
                            "description": "First name of the Agent",
                            "required": true
                          },
                          "middleName": {
                            "type": "string",
                            "description": "Middle name of the Agent",
                            "required": true
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of the Agent",
                            "required": true
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "Email address of the Agent",
                            "required": true
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Indicates if Agent is active",
                            "required": true
                          },
                          "teamId": {
                            "type": "integer",
                            "description": "ID of the Team for the Agent",
                            "required": true
                          },
                          "teamName": {
                            "type": "string",
                            "description": "Name of the Team for the Agent",
                            "required": true
                          },
                          "reportToId": {
                            "type": "integer",
                            "description": "ID of user the Agent reports to",
                            "required": true
                          },
                          "isSupervisor": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is a Supervisor",
                            "required": true
                          },
                          "lastLogin": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time of last login for Agent",
                            "required": true
                          },
                          "lastModified": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was last updated",
                            "required": true
                          },
                          "locationId": {
                            "type": "integer",
                            "description": "ID of Location associated with Agent",
                            "required": true
                          },
                          "custom1": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom2": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom3": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom4": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom5": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "internalId": {
                            "type": "string",
                            "description": "Custom ID associated with Agent",
                            "required": true
                          },
                          "securityProfileId": {
                            "type": "integer",
                            "description": "ID of the Security Profile assigned to the Agent",
                            "required": true
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "Timezone assigned to the Agent",
                            "required": true
                          },
                          "country": {
                            "type": "string",
                            "description": "Country assigned to the Agent",
                            "required": true
                          },
                          "state": {
                            "type": "string",
                            "description": "State or Province assigned to the Agent",
                            "required": true
                          },
                          "city": {
                            "type": "string",
                            "description": "Name of City assigned to the Agent",
                            "required": true
                          },
                          "chatRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a chat contact",
                            "required": true
                          },
                          "phoneRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a phone contact",
                            "required": true
                          },
                          "voicemailRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a voicemail contact",
                            "required": true
                          },
                          "workItemRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a work item contact",
                            "required": true
                          },
                          "defaultDialingPattern": {
                            "type": "integer",
                            "description": "ID of the Agent Pattern associated with this Agent",
                            "required": true
                          },
                          "maxConcurrentChats": {
                            "type": "integer",
                            "description": "Indicates number of chat contacts the Agent can accept concurrently",
                            "required": true
                          },
                          "notes": {
                            "type": "string",
                            "description": "Notes associated with the Agent",
                            "required": true
                          },
                          "hireDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date of Agent hire",
                            "required": true
                          },
                          "terminationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date of Agent termination",
                            "required": true
                          },
                          "hourlyCost": {
                            "type": "double",
                            "description": "Cost of Agent",
                            "required": true
                          },
                          "rehireStatus": {
                            "type": "boolean",
                            "description": "Indicates is the Agent is a re-hire",
                            "required": true
                          },
                          "employmentType": {
                            "type": "integer",
                            "description": "ID of the employment type",
                            "required": true
                          },
                          "referral": {
                            "type": "string",
                            "description": "Description of any referral given",
                            "required": true
                          },
                          "atHome": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is an at home worker",
                            "required": true
                          },
                          "hiringSource": {
                            "type": "string",
                            "description": "Source of Agent hiring",
                            "required": true
                          },
                          "ntLoginName": {
                            "type": "string",
                            "description": "",
                            "required": true
                          },
                          "scheduleNotification": {
                            "type": "integer",
                            "description": "Interval in minutes for WFM schedule updates",
                            "required": true
                          },
                          "federatedIdValue": {
                            "type": "string",
                            "description": "ID of Agent in external Identity Provider.  Used with Federated Identity Management functionality",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid fields - '{0}'"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Team - {0} is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "{0}"
        }
      }
    }
  },
  "teams-agents": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "<b><i><span style='color:red'>(Updated in v8.0)</span></i></b> Returns all Teams' Agents",
      "operationId": "TeamsAgents",
      "description": "This method returns the full list of Teams including the Agents on each of the Teams.<br/><br/><b><i><span style='color:red'>v8.0 NOTE: </span></i></b>Response fields have been added to support Email Inbox and inView product functionality.<div class='tabs_wrapper' data-path='admin_agents_getTeamAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "title": "TeamsResultSet",
            "type": "object",
            "properties": {
              "teams": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "teams",
                  "description": "",
                  "properties": {
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team",
                      "required": true
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Team is active",
                      "required": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description associated with the Team",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Team",
                      "required": true
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Team record was last updated",
                      "required": true
                    },
                    "inViewEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView",
                      "required": true
                    },
                    "wfoEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use WFO",
                      "required": true
                    },
                    "wfmEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use WFM",
                      "required": true
                    },
                    "qmEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use QM",
                      "required": true
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum number of concurrent chats for Agents in this Team",
                      "required": true
                    },
                    "agentCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of Agents assigned to Team",
                      "required": true
                    },
                    "maxEmailInboxCount": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Maximum number of concurrent Emails a Team can handle",
                      "required": true
                    },
                    "inViewGamificationEnabled": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView Gamificattion",
                      "required": true
                    },
                    "inViewChatEnabled": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView chat",
                      "required": true
                    },
                    "inViewLMSEnabled": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team can use inView LMS",
                      "required": true
                    },
                    "analyticsEnabled": {
                      "type": "boolean",
                      "description": "<b><i><span style='color:red'>(New in v8.0)</span></i></b> Indicates the Team will use inContact Analytics",
                      "required": true
                    },
                    "agents": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "title": "agents",
                        "description": "",
                        "properties": {
                          "agentId": {
                            "type": "integer",
                            "description": "ID of the Agent",
                            "required": true
                          },
                          "userName": {
                            "type": "string",
                            "description": "User name for the Agent",
                            "required": true
                          },
                          "firstName": {
                            "type": "string",
                            "description": "First name of the Agent",
                            "required": true
                          },
                          "middleName": {
                            "type": "string",
                            "description": "Middle name of the Agent",
                            "required": true
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of the Agent",
                            "required": true
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "Email address of the Agent",
                            "required": true
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Indicates if Agent is active",
                            "required": true
                          },
                          "teamId": {
                            "type": "integer",
                            "description": "ID of the Team for the Agent",
                            "required": true
                          },
                          "teamName": {
                            "type": "string",
                            "description": "Name of the Team for the Agent",
                            "required": true
                          },
                          "reportToId": {
                            "type": "integer",
                            "description": "ID of user the Agent reports to",
                            "required": true
                          },
                          "isSupervisor": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is a Supervisor",
                            "required": true
                          },
                          "lastLogin": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time of last login for Agent",
                            "required": true
                          },
                          "lastModified": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was last updated",
                            "required": true
                          },
                          "locationId": {
                            "type": "integer",
                            "description": "ID of Location associated with Agent",
                            "required": true
                          },
                          "custom1": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom2": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom3": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom4": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom5": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "internalId": {
                            "type": "string",
                            "description": "Custom ID associated with Agent",
                            "required": true
                          },
                          "securityProfileId": {
                            "type": "integer",
                            "description": "ID of the Security Profile assigned to the Agent",
                            "required": true
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "Timezone assigned to the Agent",
                            "required": true
                          },
                          "country": {
                            "type": "string",
                            "description": "Country assigned to the Agent",
                            "required": true
                          },
                          "state": {
                            "type": "string",
                            "description": "State or Province assigned to the Agent",
                            "required": true
                          },
                          "city": {
                            "type": "string",
                            "description": "Name of City assigned to the Agent",
                            "required": true
                          },
                          "chatRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a chat contact",
                            "required": true
                          },
                          "phoneRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a phone contact",
                            "required": true
                          },
                          "voicemailRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a voicemail contact",
                            "required": true
                          },
                          "workItemRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a work item contact",
                            "required": true
                          },
                          "defaultDialingPattern": {
                            "type": "integer",
                            "description": "ID of the Agent Pattern associated with this Agent",
                            "required": true
                          },
                          "maxConcurrentChats": {
                            "type": "integer",
                            "description": "Indicates number of chat contacts the Agent can accept concurrently",
                            "required": true
                          },
                          "notes": {
                            "type": "string",
                            "description": "Notes associated with the Agent",
                            "required": true
                          },
                          "hireDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date of Agent hire",
                            "required": true
                          },
                          "terminationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date of Agent termination",
                            "required": true
                          },
                          "hourlyCost": {
                            "type": "double",
                            "description": "Cost of Agent",
                            "required": true
                          },
                          "rehireStatus": {
                            "type": "boolean",
                            "description": "Indicates is the Agent is a re-hire",
                            "required": true
                          },
                          "employmentType": {
                            "type": "integer",
                            "description": "ID of the employment type",
                            "required": true
                          },
                          "referral": {
                            "type": "string",
                            "description": "Description of any referral given",
                            "required": true
                          },
                          "atHome": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is an at home worker",
                            "required": true
                          },
                          "hiringSource": {
                            "type": "string",
                            "description": "Source of Agent hiring",
                            "required": true
                          },
                          "ntLoginName": {
                            "type": "string",
                            "description": "",
                            "required": true
                          },
                          "scheduleNotification": {
                            "type": "integer",
                            "description": "Interval in minutes for WFM schedule updates",
                            "required": true
                          },
                          "federatedIdValue": {
                            "type": "string",
                            "description": "ID of Agent in external Identity Provider.  Used with Federated Identity Management functionality",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid fields - '{0}'"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "teams_teamId_unavailable_codes": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns Unavailable Codes for a Team",
      "operationId": "getTeamUnavailableCodes",
      "description": "This method returns the unavailable codes that are available for a Team identified by teamId.  These are the only unavailable codes that can be used as a \"reason\" in the <b><i><a href='AgentAPI#!/Sessions/setAgentStatus'>POST /agent-session/{sessionId}state</a></i></b> and <b><i><a href='AdminAPI#!/Agents/SetAgentState'>POST /agents/{agentId}/state</a></i></b> methods where you can set the state of an Agent.<div class='tabs_wrapper' data-path='admin_contacts_getTeamIDUnavailableCode.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "name": "activeOnly",
          "description": "True returns only active unavailable codes.  Default is False",
          "type": "boolean",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getTeamUnavailableCodesResponse"
          }
        },
        "400": {
          "description": "Internal Server Error"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Forbidden. Check Security Profile permissions</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "<p>Invalid teamId - '{0}', cannot be null or empty</p><p>Invalid teamId - '{0}', must be an integer</p><p>Invalid teamId - '{0}', does not exist</p>"
        }
      }
    },
    "post": {
      "tags": [ "Agents" ],
      "summary": "Assign Unavailable Codes to a Team",
      "operationId": "AssignUnavailableCode",
      "description": "This method assigns unavailable codes to a Team identified by teamId.<div class='tabs_wrapper' data-path='admin_contacts_postTeamIDUnavailableCode.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postTeamUnavailableCodesRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postTeamUnavailableCodesResponse"
          }
        },
        "400": {
          "description": "Invalid codes - cannot be null or empty"
        },
        "403": {
          "description": "<p>Team - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid teamId - {0}"
        }
      }
    },
    "delete": {
      "tags": [ "Agents" ],
      "summary": "Remove Unavailable Codes from a Team",
      "operationId": "RemoveUnavailableCodeTeam",
      "description": "This method removes unavailable codes from a Team identified by teamId.<div class='tabs_wrapper' data-path='admin_contacts_deleteTeamIDUnavailableCode.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/deleteTeamUnavailableCodesRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/deleteTeamUnavailableCodesResponse"
          }
        },
        "400": {
          "description": "Invalid codes - cannot be null or empty"
        },
        "403": {
          "description": "<p>Team - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid teamId - {0}"
        }
      }
    }
  },
  "definitions": {
    "parameters": {
      "agentId": {
        "name": "agentId",
        "description": "Agent Id",
        "required": true,
        "type": "integer",
        "in": "path"
      },
      "teamId": {
        "name": "teamId",
        "description": "Team Id",
        "required": true,
        "type": "integer",
        "in": "path"
      },
      "startDate": {
        "name": "startDate",
        "description": "This is an ISO 8601 date/time",
        "required": true,
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "endDate": {
        "name": "endDate",
        "description": "This is an ISO 8601 date/time",
        "required": true,
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "updatedSince": {
        "name": "updatedSince",
        "description": "Returns all records updated since ISO 8601 time",
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "updatedSinceNew": {
        "name": "updatedSince",
        "description": "Returns all records updated since ISO 8601 time",
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "isActiveNew": {
        "name": "isActive",
        "description": "Filters results based on active status",
        "type": "boolean",
        "in": "query"
      },
      "searchString": {
        "name": "searchString",
        "description": "Used to filter results to objects with the value in key fields",
        "type": "string",
        "in": "query"
      },
      "searchStringNew": {
        "name": "searchString",
        "description": "Used to filter results to objects with the value in key fields",
        "type": "string",
        "in": "query"
      },
      "fields": {
        "name": "fields",
        "description": "Comma separated list of elements to return in response",
        "type": "string",
        "in": "query"
      },
      "fieldsNew": {
        "name": "fields",
        "description": "Comma separated list of elements to return in response",
        "type": "string",
        "in": "query"
      },
      "skip": {
        "name": "skip",
        "description": "Number of records to skip in the results",
        "type": "integer",
        "in": "query"
      },
      "skipNew": {
        "name": "skip",
        "description": "Number of records to skip in the results",
        "type": "integer",
        "in": "query"
      },
      "top": {
        "name": "top",
        "description": "Number of records to return in the results",
        "type": "integer",
        "in": "query"
      },
      "topNew": {
        "name": "top",
        "description": "Number of records to return in the results",
        "type": "integer",
        "in": "query"
      },
      "orderBy": {
        "name": "orderBy",
        "description": "Values used to order results before paginating them.  Can also specify \"asc\" or \"desc\" to specify direction for example \"field1 asc,field2 desc,...\".  Default is asc",
        "type": "string",
        "in": "query"
      },
      "orderByNew": {
        "name": "orderBy",
        "description": "Values used to order results before paginating them.  Can also specify \"asc\" or \"desc\" to specify direction for example \"field1 asc,field2 desc,...\".  Default is asc",
        "type": "string",
        "in": "query"
      },
      "mediaTypeId": {
        "name": "mediaTypeId",
        "description": "Filters based on the media type of the Skill",
        "type": "integer",
        "in": "query"
      },
      "mediaTypeIdNew": {
        "name": "mediaTypeId",
        "description": "Filters based on the media type of the Skill",
        "type": "integer",
        "in": "query"
      },
      "outboundStrategy": {
        "name": "outboundStrategy",
        "description": "Filters based on outbound strategy for the Skill",
        "type": "string",
        "in": "query"
      },
      "outboundStrategyNew": {
        "name": "outboundStrategy",
        "description": "Filters based on outbound strategy for the Skill",
        "type": "string",
        "in": "query"
      },
      "isSkillActive": {
        "name": "isSkillActive",
        "description": "Filters based on active state of the Skill",
        "type": "boolean",
        "in": "query"
      },
      "isSkillActiveNew": {
        "name": "isSkillActive",
        "description": "Filters based on active state of the Skill",
        "type": "boolean",
        "in": "query"
      },
      "contentBodyMetaData": {
        "in": "body",
        "name": "",
        "description": "Content Body",
        "required": true,
        "allowMultiple": true
      }
    },
    "getAgentsResponse": {
      "title": " ",
      "type": "object",
      "properties": {
        "resultSet": {
          "schema": {
            "title": "resultSet",
            "description": "Result Set",
            "properties": {
              "_links": {
                "schema": {
                  "title": "_links",
                  "description": "Links used to parse paginated response",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "businessUnitId": {
                "type": "integer",
                "description": "Business Unit Id"
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the results"
              },
              "agents": {
                "type": "array",
                "description": "Collection of Agents",
                "items": {
                  "title": "Agent",
                  "description": "Agent",
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "Agent Id"
                    },
                    "userName": {
                      "type": "string",
                      "description": "Agent User Name"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "Agent First Name"
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Agent Middle Name"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Agent Last Name"
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Agent Email Address"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Is Agent Active"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Agent Team Id"
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Agent Team Name"
                    },
                    "reportToId": {
                      "type": "integer",
                      "description": "Agent Manager Id"
                    },
                    "reportToName": {
                      "type": "string",
                      "description": "Agent Manager Name"
                    },
                    "isSupervisor": {
                      "type": "boolean",
                      "description": "Is Agent Supervisor"
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Last Login (ISO 8601 time)"
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Last Updated (ISO 8601 time)"
                    },
                    "location": {
                      "type": "string",
                      "description": "Agent Location"
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Agent Custom Value 1"
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Agent Custom Value 2"
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Agent Custom Value 3"
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Agent Custom Value 4"
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Agent Custom Value 5"
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Agent Custom Id"
                    },
                    "profileId": {
                      "type": "integer",
                      "description": "Agent Security Profile Id"
                    },
                    "profileName": {
                      "type": "string",
                      "description": "Agent Security Profile Name"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Agent Timezone"
                    },
                    "country": {
                      "type": "string",
                      "description": "Agent Country Code"
                    },
                    "countryName": {
                      "type": "string",
                      "description": "Agent Country Name"
                    },
                    "state": {
                      "type": "string",
                      "description": "Agent State or Province"
                    },
                    "city": {
                      "type": "string",
                      "description": "Agent City"
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact"
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a phone contact"
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a workitem contact"
                    },
                    "defaultDialingPattern": {
                      "type": "integer",
                      "description": "Agent Dialing Pattern Id"
                    },
                    "defaultDialingPatternName": {
                      "type": "string",
                      "description": "Agent Dialing Pattern Name"
                    },
                    "teamDefaultMaxChats": {
                      "type": "boolean",
                      "description": "Indicates if Agent uses Team settings for max chats"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Indicates number of chat contacts the Agent can accept concurrently"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Agent Notes"
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Creation Date (ISO 8601 time)"
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Inactive Date (ISO 8601 time)"
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Hire Date (ISO 8601 time)"
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Termination Date (ISO 8601 time)"
                    },
                    "hourlyCost": {
                      "type": "double",
                      "description": "Agent Hourly Cost"
                    },
                    "rehireStatus": {
                      "type": "boolean",
                      "description": "Agent Rehire Status"
                    },
                    "employmentType": {
                      "type": "integer",
                      "description": "Agent Employment Type Id"
                    },
                    "employmentTypeName": {
                      "type": "string",
                      "description": "Agent Employment Type Name",
                      "enum": [
                        "Full-Time",
                        "Part-Time",
                        "Temporary",
                        "Outsources",
                        "Other"
                      ]
                    },
                    "referral": {
                      "type": "string",
                      "description": "Agent Referral Description"
                    },
                    "atHome": {
                      "type": "boolean",
                      "description": "Agent Work at Home Status"
                    },
                    "hiringSource": {
                      "type": "string",
                      "description": "Agent Hiring Source"
                    },
                    "ntLoginName": {
                      "type": "string",
                      "description": ""
                    },
                    "scheduleNotification": {
                      "type": "integer",
                      "description": "Time between work schedule notifications",
                      "enum": [
                        "5",
                        "10",
                        "15"
                      ]
                    },
                    "federatedId": {
                      "type": "string",
                      "description": "Agent Id in External Identity Provider.  Used with Federated Identity Management functionality"
                    },
                    "sipUser": {
                      "type": "string",
                      "description": "Used to associate the Agent with a Skype for Business user.  Used with the inContact Gateway for Skype for Business"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postAgentsRequest": {
      "title": " ",
      "type": "object",
      "required": [ "agents" ],
      "properties": {
        "agents": {
          "type": "array",
          "description": "Collection of Agents to be created",
          "required": true,
          "items": {
            "title": "Agent",
            "required": [ "userName", "firstName", "lastName", "teamId", "profileId", "emailAddress", "timeZone", "country", "city" ],
            "properties": {
              "userName": {
                "type": "string",
                "description": "Agent User Name"
              },
              "firstName": {
                "type": "string",
                "description": "Agent First Name"
              },
              "middleName": {
                "type": "string",
                "description": "Agent Middle Name"
              },
              "lastName": {
                "type": "string",
                "description": "Agent Last Name"
              },
              "teamId": {
                "type": "integer",
                "description": "Agent Team Id"
              },
              "reportToId": {
                "type": "integer",
                "description": "Agent Manager Id"
              },
              "internalId": {
                "type": "string",
                "description": "Agent Custom Id"
              },
              "profileId": {
                "type": "integer",
                "description": "Agent Security Profile Id"
              },
              "password": {
                "type": "string",
                "description": "Agent Password if \"Generate Random Passwords\" is not enabled in associated Security Profile"
              },
              "forceChangeOnLogon": {
                "type": "boolean",
                "description": "Indicates if the Agent is required to change their password.  Default is true"
              },
              "emailAddress": {
                "type": "string",
                "description": "Agent Email Address"
              },
              "isActive": {
                "type": "boolean",
                "description": "Agent Active Status. Default is true"
              },
              "timeZone": {
                "type": "string",
                "description": "Agent Timezone"
              },
              "locationId": {
                "type": "integer",
                "description": "Agent Location"
              },
              "country": {
                "type": "string",
                "description": "Agent Country"
              },
              "state": {
                "type": "string",
                "description": "Agent State or Province"
              },
              "city": {
                "type": "string",
                "description": "Agent City"
              },
              "chatRefusalTimeout": {
                "type": "integer",
                "description": "Time in seconds the Agent has to accept a chat contact"
              },
              "phoneRefusalTimeout": {
                "type": "integer",
                "description": "Time in seconds the Agent has to accept a phone contact"
              },
              "workItemRefusalTimeout": {
                "type": "integer",
                "description": "Time in seconds the Agent has to accept a workitem contact"
              },
              "defaultDialingPattern": {
                "type": "integer",
                "description": "Agent Dialing Pattern Id"
              },
              "maxConcurrentChats": {
                "type": "integer",
                "description": "Indicates number of chat contacts the Agent can accept concurrently"
              },
              "notes": {
                "type": "string",
                "description": "Agent Notes"
              },
              "hireDate": {
                "type": "string",
                "format": "date-time",
                "description": "Agent Hire Date (ISO 8601 time)"
              },
              "terminationDate": {
                "type": "string",
                "format": "date-time",
                "description": "Agent Termination Date(ISO 8601 time)"
              },
              "hourlyCost": {
                "type": "double",
                "description": "Agent Hourly Cost"
              },
              "rehireStatus": {
                "type": "boolean",
                "description": "Agent Rehire Status"
              },
              "employmentType": {
                "type": "integer",
                "description": "Employment Type Id. 1 for Full-Time, 2 for Part-Time, 3 for Temporary, 4 for Outsources or 5 for Other",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ]
              },
              "referral": {
                "type": "string",
                "description": "Agent Referral Description"
              },
              "atHome": {
                "type": "boolean",
                "description": "Agent At Home Worker Status"
              },
              "hiringSource": {
                "type": "integer",
                "description": "Agent Hiring Source Id"
              },
              "ntLoginName": {
                "type": "string",
                "description": ""
              },
              "custom1": {
                "type": "string",
                "description": "Agent Custom Value 1. 40 characters max"
              },
              "custom2": {
                "type": "string",
                "description": "Agent Custom Value 2. 40 characters max"
              },
              "custom3": {
                "type": "string",
                "description": "Agent Custom Value 3. 40 characters max"
              },
              "custom4": {
                "type": "string",
                "description": "Agent Custom Value 4. 40 characters max"
              },
              "custom5": {
                "type": "string",
                "description": "Agent Custom Value 5. 40 characters max"
              },
              "scheduleNotification": {
                "type": "integer",
                "description": "Time between work schedule notifications",
                "enum": [
                  "5",
                  "10",
                  "15"
                ]
              },
              "federatedId": {
                "type": "string",
                "description": "Agent Id in External Identity Provider.  Used with Federated Identity Management functionality"
              },
              "maxEmailInboxCount": {
                "type": "integer",
                "description": "Maximum number of Emails the Agent can have in their inbox"
              },
              "useTeamMaxEmailInboxCount": {
                "type": "boolean",
                "description": "Indicates if the Agent should use the Team setting for max Emails in the inbox"
              },
              "sipUser": {
                "type": "string",
                "description": "Used to associate the Agent with a Skype for Business user.  Used with the inContact Gateway for Skype for Business"
              }
            }
          }
        }
      }
    },
    "postAgentsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "resultSet",
            "description": "Result Set",
            "required": [ "errorCount", "agentResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Agent Creation Error Count"
              },
              "agentResults": {
                "type": "array",
                "description": "Collection of Agent Creation Results",
                "items": {
                  "title": "AgentResult",
                  "description": "Agent Result",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Agent Creation Status"
                    },
                    "agentId": {
                      "type": "integer",
                      "description": "Created Agent Id. Only returned if creation succeeded"
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Agent Creation Error Description. Only returned if creation failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAgentResponse": {
      "title": " ",
      "type": "object",
      "properties": {
        "resultSet": {
          "schema": {
            "title": "resultSet",
            "description": "Result Set",
            "properties": {
              "businessUnitId": {
                "type": "integer",
                "format": "int64",
                "description": "Business Unit Id",
                "required": true
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call",
                "required": true
              },
              "agents": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "Agent",
                  "description": "",
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "Agent Id"
                    },
                    "userName": {
                      "type": "string",
                      "description": "Agent User Name"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "Agent First Name"
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Agent Middle Name"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Agent Last Name"
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Agent Email Address"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Is Agent Active"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Agent Team Id"
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Agent Team Name"
                    },
                    "reportToId": {
                      "type": "integer",
                      "description": "Agent Manager Id"
                    },
                    "reportToName": {
                      "type": "string",
                      "description": "Agent Manager Name"
                    },
                    "isSupervisor": {
                      "type": "boolean",
                      "description": "Is Agent Supervisor"
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Last Login (ISO 8601 time)"
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Last Updated (ISO 8601 time)"
                    },
                    "location": {
                      "type": "string",
                      "description": "Agent Location"
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Agent Custom Value 1"
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Agent Custom Value 2"
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Agent Custom Value 3"
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Agent Custom Value 4"
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Agent Custom Value 5"
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Agent Custom Id"
                    },
                    "profileId": {
                      "type": "integer",
                      "description": "Agent Security Profile Id"
                    },
                    "profileName": {
                      "type": "string",
                      "description": "Agent Security Profile Name"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Agent Timezone"
                    },
                    "country": {
                      "type": "string",
                      "description": "Agent Country Code"
                    },
                    "countryName": {
                      "type": "string",
                      "description": "Agent Country Name"
                    },
                    "state": {
                      "type": "string",
                      "description": "Agent State or Province"
                    },
                    "city": {
                      "type": "string",
                      "description": "Agent City"
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact"
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a phone contact"
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a workitem contact"
                    },
                    "defaultDialingPattern": {
                      "type": "integer",
                      "description": "Agent Dialing Pattern Id"
                    },
                    "defaultDialingPatternName": {
                      "type": "string",
                      "description": "Agent Dialing Pattern Name"
                    },
                    "teamDefaultMaxChats": {
                      "type": "boolean",
                      "description": "Indicates if Agent uses Team settings for max chats"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Indicates number of chat contacts the Agent can accept concurrently"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Agent Notes"
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Creation Date (ISO 8601 time)"
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Inactive Date (ISO 8601 time)"
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Hire Date (ISO 8601 time)"
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Agent Termination Date (ISO 8601 time)"
                    },
                    "hourlyCost": {
                      "type": "double",
                      "description": "Agent Hourly Cost"
                    },
                    "rehireStatus": {
                      "type": "boolean",
                      "description": "Agent Rehire Status"
                    },
                    "employmentType": {
                      "type": "integer",
                      "description": "Agent Employment Type Id"
                    },
                    "employmentTypeName": {
                      "type": "string",
                      "description": "Agent Employment Type Name",
                      "enum": [
                        "Full-Time",
                        "Part-Time",
                        "Temporary",
                        "Outsources",
                        "Other"
                      ]
                    },
                    "referral": {
                      "type": "string",
                      "description": "Agent Referral Description"
                    },
                    "atHome": {
                      "type": "boolean",
                      "description": "Agent Work at Home Status"
                    },
                    "hiringSource": {
                      "type": "string",
                      "description": "Agent Hiring Source"
                    },
                    "ntLoginName": {
                      "type": "string",
                      "description": ""
                    },
                    "scheduleNotification": {
                      "type": "integer",
                      "description": "Time between work schedule notifications",
                      "enum": [
                        "5",
                        "10",
                        "15"
                      ]
                    },
                    "federatedId": {
                      "type": "string",
                      "description": "Agent Id in External Identity Provider.  Used with Federated Identity Management functionality"
                    },
                    "sipUser": {
                      "type": "string",
                      "description": "Used to associate the Agent with a Skype for Business user.  Used with the inContact Gateway for Skype for Business"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "putAgentRequest": {
      "title": " ",
      "type": "object",
      "required": [ "agent" ],
      "properties": {
        "agent": {
          "type": "object",
          "description": "Agent to Update",
          "properties": {
            "userName": {
              "type": "string",
              "description": "Agent User Name"
            },
            "firstName": {
              "type": "string",
              "description": "Agent First Name"
            },
            "middleName": {
              "type": "string",
              "description": "Agent Middle Name"
            },
            "lastName": {
              "type": "string",
              "description": "Agent Last Name"
            },
            "teamId": {
              "type": "integer",
              "description": "Agent Team Id"
            },
            "reportToId": {
              "type": "integer",
              "description": "Agent Manager Id"
            },
            "internalId": {
              "type": "string",
              "description": "Agent Custom Id"
            },
            "profileId": {
              "type": "integer",
              "description": "Agent Security Profile Id"
            },
            "password": {
              "type": "string",
              "description": "Agent Password if \"Generate Random Passwords\" is not enabled in associated Security Profile"
            },
            "forceChangeOnLogon": {
              "type": "boolean",
              "description": "Indicates if the Agent is required to change their password.  Default is true"
            },
            "emailAddress": {
              "type": "string",
              "description": "Agent Email Address"
            },
            "isActive": {
              "type": "boolean",
              "description": "Agent Active Status. Default is true"
            },
            "timeZone": {
              "type": "string",
              "description": "Agent Timezone"
            },
            "locationId": {
              "type": "integer",
              "description": "Agent Location"
            },
            "country": {
              "type": "string",
              "description": "Agent Country"
            },
            "state": {
              "type": "string",
              "description": "Agent State or Province"
            },
            "city": {
              "type": "string",
              "description": "Agent City"
            },
            "chatRefusalTimeout": {
              "type": "integer",
              "description": "Time in seconds the Agent has to accept a chat contact"
            },
            "phoneRefusalTimeout": {
              "type": "integer",
              "description": "Time in seconds the Agent has to accept a phone contact"
            },
            "workItemRefusalTimeout": {
              "type": "integer",
              "description": "Time in seconds the Agent has to accept a workitem contact"
            },
            "defaultDialingPattern": {
              "type": "integer",
              "description": "Agent Dialing Pattern Id"
            },
            "maxConcurrentChats": {
              "type": "integer",
              "description": "Indicates number of chat contacts the Agent can accept concurrently"
            },
            "notes": {
              "type": "string",
              "description": "Agent Notes"
            },
            "hireDate": {
              "type": "string",
              "format": "date-time",
              "description": "Agent Hire Date (ISO 8601 time)"
            },
            "terminationDate": {
              "type": "string",
              "format": "date-time",
              "description": "Agent Termination Date(ISO 8601 time)"
            },
            "hourlyCost": {
              "type": "double",
              "description": "Agent Hourly Cost"
            },
            "rehireStatus": {
              "type": "boolean",
              "description": "Agent Rehire Status"
            },
            "employmentType": {
              "type": "integer",
              "description": "Employment Type Id. 1 for Full-Time, 2 for Part-Time, 3 for Temporary, 4 for Outsources or 5 for Other",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5"
              ]
            },
            "referral": {
              "type": "string",
              "description": "Agent Referral Description"
            },
            "atHome": {
              "type": "boolean",
              "description": "Agent At Home Worker Status"
            },
            "hiringSource": {
              "type": "integer",
              "description": "Agent Hiring Source Id"
            },
            "ntLoginName": {
              "type": "string",
              "description": ""
            },
            "custom1": {
              "type": "string",
              "description": "Agent Custom Value 1. 40 characters max"
            },
            "custom2": {
              "type": "string",
              "description": "Agent Custom Value 2. 40 characters max"
            },
            "custom3": {
              "type": "string",
              "description": "Agent Custom Value 3. 40 characters max"
            },
            "custom4": {
              "type": "string",
              "description": "Agent Custom Value 4. 40 characters max"
            },
            "custom5": {
              "type": "string",
              "description": "Agent Custom Value 5. 40 characters max"
            },
            "scheduleNotification": {
              "type": "integer",
              "description": "Time between work schedule notifications",
              "enum": [
                "5",
                "10",
                "15"
              ]
            },
            "federatedId": {
              "type": "string",
              "description": "Agent Id in External Identity Provider.  Used with Federated Identity Management functionality"
            },
            "maxEmailInboxCount": {
              "type": "integer",
              "description": "Maximum number of Emails the Agent can have in their inbox"
            },
            "useTeamMaxEmailInboxCount": {
              "type": "boolean",
              "description": "Indicates if the Agent should use the Team setting for max Emails in the inbox"
            },
            "sipUser": {
              "type": "string",
              "description": "Used to associate the Agent with a Skype for Business user.  Used with the inContact Gateway for Skype for Business"
            }
          }
        }
      }
    },
    "getAgentsSkillsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "resultSet",
            "description": "Result Set",
            "required": [ "lastPollTime", "businessUnitId", "totalRecords", "agentSkillAssignments" ],
            "properties": {
              "_links": {
                "schema": {
                  "title": "_links",
                  "description": "Links used to parse paginated response",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
              },
              "businessUnitId": {
                "type": "integer",
                "format": "int64",
                "description": "Business Unit Id"
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the result"
              },
              "agentSkillAssignments": {
                "type": "array",
                "description": "Collection of Agent Skill Assignments",
                "items": {
                  "title": "AgentSkillAssignment",
                  "description": "",
                  "properties": {
                    "isActive": {
                      "type": "boolean",
                      "description": "Agent Active Status"
                    },
                    "agentProficencyValue": {
                      "type": "integer",
                      "description": "Agent Skill Proficiency Id"
                    },
                    "agentProficencyName": {
                      "type": "string",
                      "description": "Agent Skill Proficiency Name"
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Agent Skill Custom Id"
                    },
                    "agentId": {
                      "type": "integer",
                      "description": "Agent Id"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Agent Team Id"
                    },
                    "agentName": {
                      "type": "string",
                      "description": "Agent Name"
                    },
                    "campaignId": {
                      "type": "integer",
                      "description": "Skill Campaign Id"
                    },
                    "emailFromAddress": {
                      "type": "string",
                      "description": "Agent Email Address"
                    },
                    "isSkillActive": {
                      "type": "boolean",
                      "description": "Skill Active State"
                    },
                    "isDialer": {
                      "type": "boolean",
                      "description": "Indicates if the Skill is manual voice"
                    },
                    "isNaturalCalling": {
                      "type": "boolean",
                      "description": "Indicates if the Skill is Personal Connection"
                    },
                    "isOutbound": {
                      "type": "boolean",
                      "description": "Indicates if the Skill is outbound"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the skill assignment record was last updated"
                    },
                    "mediaType": {
                      "type": "integer",
                      "description": "Skill Media Type Id"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Skill Assignment Notes"
                    },
                    "requireDisposition": {
                      "type": "boolean",
                      "description": "Indicates if the Skill requires a disposition"
                    },
                    "scriptDisposition": {
                      "type": "boolean",
                      "description": "Indicates if the Skill disposition can be set in a script"
                    },
                    "skillId": {
                      "type": "integer",
                      "description": "Agent Skill Id"
                    },
                    "skillName": {
                      "type": "string",
                      "description": "Agent Skill Name"
                    },
                    "useACW": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses an ACW state"
                    },
                    "useDisposition": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses a disposition"
                    },
                    "useSecondaryDispositions": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses a secondary disposition"
                    },
                    "outboundStrategy": {
                      "type": "string",
                      "description": "Skill Outbound Strategy (\"Manual\" or \"Personal Connection\")"
                    },
                    "campaignName": {
                      "type": "string",
                      "description": "Skill Campaign Name"
                    },
                    "priorityBlending": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses priority blending"
                    },
                    "isNaturalCallingRunning": {
                      "type": "boolean",
                      "description": "Indicates if the Personal Connection Skill is running"
                    },
                    "mediaTypeName": {
                      "type": "string",
                      "description": "Skill Media Type Name"
                    },
                    "screenPopTriggerEvent": {
                      "type": "string",
                      "description": "Determines when the screen pop for the Skill occurs"
                    },
                    "lastPollTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 timestamp of last database poll for this skill assignment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postAgentSkillsRequest": {
      "title": " ",
      "description": "Request",
      "type": "object",
      "properties": {
        "skills": {
          "type": "array",
          "description": "Collection of Skill Assignments",
          "items": {
            "title": "Skill",
            "required": [ "skillId", "isActive" ],
            "properties": {
              "skillId": {
                "description": "Skill id",
                "type": "integer"
              },
              "proficiency": {
                "description": "Agent Skill Proficiency Value. Default is 1 (Highest)",
                "type": "integer"
              },
              "isActive": {
                "description": "Agent Skill Active State",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "postAgentSkillsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "errorCount", "skillResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of unsuccessful skill assignments",
                "required": true
              },
              "skillResults": {
                "type": "array",
                "description": "Collection of Skill Results",
                "items": {
                  "title": "SkillResult",
                  "description": "",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Skill Assignment Success State"
                    },
                    "skillId": {
                      "type": "integer",
                      "description": "Skill Id. Only returned if assignment was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Skill Assignment Error. Only returned if assignment was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "putAgentSkillsRequest": {
      "title": " ",
      "description": "Request",
      "type": "object",
      "properties": {
        "skills": {
          "type": "array",
          "description": "Collection of Skill Assignments",
          "items": {
            "title": "Skill",
            "required": [ "skillId" ],
            "properties": {
              "skillId": {
                "description": "Skill id",
                "type": "integer"
              },
              "proficiency": {
                "description": "Agent Skill Proficiency Value",
                "type": "integer"
              },
              "isActive": {
                "description": "Agent Skill Active State",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "getAgentSkillsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "resultSet",
            "description": "Result Set",
            "required": [ "lastPollTime", "businessUnitId", "totalRecords", "agentSkillAssignments" ],
            "properties": {
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
              },
              "businessUnitId": {
                "type": "integer",
                "format": "int64",
                "description": "Business Unit Id"
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the result"
              },
              "agentSkillAssignments": {
                "type": "array",
                "description": "Collection of Agent Skill Assignments",
                "items": {
                  "title": "AgentSkillAssignment",
                  "description": "",
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "Agent Id"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "Agent First Name"
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Agent Middle Name"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Agent Last Name"
                    },
                    "agentProficencyValue": {
                      "type": "integer",
                      "description": "Agent Skill Proficiency Id"
                    },
                    "agentProficencyName": {
                      "type": "string",
                      "description": "Agent Skill Proficiency Name"
                    },
                    "campaignId": {
                      "type": "integer",
                      "description": "Skill Campaign Id"
                    },
                    "campaignName": {
                      "type": "string",
                      "description": "Skill Campaign Name"
                    },
                    "emailFromAddress": {
                      "type": "string",
                      "description": "Agent Email Address"
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Agent Skill Custom Id"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Agent Active Status"
                    },
                    "isSkillActive": {
                      "type": "boolean",
                      "description": "Skill Active State"
                    },
                    "isDialer": {
                      "type": "boolean",
                      "description": "Indicates if the Skill is manual voice"
                    },
                    "isNaturalCalling": {
                      "type": "boolean",
                      "description": "Indicates if the Skill is Personal Connection"
                    },
                    "isNaturalCallingRunning": {
                      "type": "boolean",
                      "description": "Indicates if the Personal Connection Skill is running"
                    },
                    "isOutbound": {
                      "type": "boolean",
                      "description": "Indicates if the Skill is outbound"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the skill assignment record was last updated"
                    },
                    "mediaTypeId": {
                      "type": "integer",
                      "description": "Skill Media Type Id"
                    },
                    "mediaTypeName": {
                      "type": "string",
                      "description": "Skill Media Type Name"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Skill Assignment Notes"
                    },
                    "outboundStrategy": {
                      "type": "string",
                      "description": "Skill Outbound Strategy"
                    },
                    "priorityBlending": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses priority blending"
                    },
                    "requireDisposition": {
                      "type": "boolean",
                      "description": "Indicates if the Skill requires a disposition"
                    },
                    "scriptDisposition": {
                      "type": "boolean",
                      "description": "Indicates if the Skill disposition can be set in a script"
                    },
                    "skillId": {
                      "type": "integer",
                      "description": "Agent Skill Id"
                    },
                    "skillName": {
                      "type": "string",
                      "description": "Agent Skill Name"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Agent Team Id"
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Agent Team Name"
                    },
                    "useACW": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses an ACW state"
                    },
                    "useDisposition": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses a disposition"
                    },
                    "useSecondaryDispositions": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses a secondary disposition"
                    },
                    "screenPopTriggerEvent": {
                      "type": "string",
                      "description": "Determines when the screen pop for the Skill occurs"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteAgentSkillsRequest": {
      "title": " ",
      "description": "",
      "type": "object",
      "required": [ "skills" ],
      "properties": {
        "skills": {
          "type": "array",
          "description": "Collecton of Skill Ids",
          "items": {
            "title": "Skill",
            "required": [ "skillId" ],
            "properties": {
              "skillId": {
                "description": "Skill Id",
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "getAgentUnassignedSkillsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "resultSet",
            "description": "Result Set",
            "required": [ "businessUnitId", "totalRecords", "skills" ],
            "properties": {
              "_links": {
                "schema": {
                  "title": "_links",
                  "description": "Links used to parse paginated response",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "businessUnitId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of Business Unit",
                "required": true
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the payload",
                "required": true
              },
              "skills": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "Skill",
                  "description": "",
                  "required": [ "skillId", "skillName", "isSkillActive", "mediaTypeId", "mediaTypeName", "campaignId", "campaignName" ],
                  "properties": {
                    "skillId": {
                      "type": "integer",
                      "description": "Skill Id"
                    },
                    "skillName": {
                      "type": "string",
                      "description": "Skill Name"
                    },
                    "isSkillActive": {
                      "type": "boolean",
                      "description": "Skill Active State"
                    },
                    "mediaTypeId": {
                      "type": "integer",
                      "description": "Skill Media Type Id"
                    },
                    "mediaTypeName": {
                      "type": "string",
                      "description": "Skill Media Type Name"
                    },
                    "campaignId": {
                      "type": "integer",
                      "description": "Skill Campaign Id"
                    },
                    "campaignName": {
                      "type": "string",
                      "description": "Skill Campaign Name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAgentSkillsDataResponse": {
      "title": " ",
      "type": "object",
      "required": [ "agentSkillData" ],
      "properties": {
        "agentSkillData": {
          "schema": {
            "title": "AgentSkillData",
            "description": "Agent Skill Data",
            "required": [ "agents" ],
            "properties": {
              "agents": {
                "type": "array",
                "description": "Collection of Agents",
                "items": {
                  "title": "Agents",
                  "required": [ "agent", "skills" ],
                  "properties": {
                    "agent": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The agent Id"
                    },
                    "skills": {
                      "type": "array",
                      "description": "Collection of Skill Data",
                      "items": {
                        "title": "SkillData",
                        "properties": {
                          "SkillNo": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The skill Id"
                          },
                          "OfferedContacts": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of contacts available to agent"
                          },
                          "AnsweredContacts": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of contacts taken by agent"
                          },
                          "HoldCalls": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of contacts placed on hold"
                          },
                          "TalkTime": {
                            "type": "number",
                            "format": "double",
                            "description": "Number of seconds contacts were active"
                          },
                          "HeldTime": {
                            "type": "number",
                            "format": "double",
                            "description": "Number of seconds contacts were on hold"
                          },
                          "ACWTime": {
                            "type": "number",
                            "format": "double",
                            "description": "Number of seconds contacts were in ACW"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAgentsQuickRepliesResponse": {
      "title": " ",
      "description": "Quick Replies Result Set",
      "required": ["quickReplies"],
      "properties": {
        "quickReplies": {
          "type": "array",
          "description": "Collection of Quick Replies",
          "items": {
            "title": "QuickReply",
            "description": "Quick Reply",
            "required": ["quickReplyId","title","keyWords","content","skills"],
            "properties": {
              "quickReplyId": {
                "type": "integer",
                "format": "int64",
                "description": "Quick Reply Id"
              },
              "title": {
                "type": "string",
                "description": "Quick Reply Title"
              },
              "keyWords": {
                "type": "string",
                "description": "Quick Reply Keywords"
              },
              "content": {
                "type": "string",
                "format": "html",
                "description": "Quick Reply Content (HTML-formatted)"
              },
              "skills": {
                "type": "array",
                "description": "Collection of Quick Reply Skills",
                "items": {
                  "title": "Skill",
                  "description": "Skill",
                  "required": ["skillId","skillName"],
                  "properties": {
                    "skillId": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Skill Id"
                    },
                    "skillName": {
                      "type": "string",
                      "description": "Skill Name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAgentQuickRepliesResponse": {
      "title": " ",
      "description": "Quick Replies Result Set",
      "required": [ "quickReplies" ],
      "properties": {
        "quickReplies": {
          "type": "array",
          "description": "Collection of Quick Replies",
          "items": {
            "title": "QuickReply",
            "description": "Quick Reply",
            "required": [ "quickReplyId", "title", "keyWords", "content", "isFavorite", "skills" ],
            "properties": {
              "quickReplyId": {
                "type": "integer",
                "format": "int64",
                "description": "Quick Reply Id"
              },
              "title": {
                "type": "string",
                "description": "Quick Reply Title"
              },
              "keyWords": {
                "type": "string",
                "description": "Quick Reply Keywords"
              },
              "content": {
                "type": "string",
                "format": "html",
                "description": "Quick Reply Content (HTML-formatted)"
              },
              "isFavorite": {
                "type": "integer",
                "description": "Favorite State"
              },
              "skills": {
                "type": "array",
                "description": "Collection of Quick Reply Skills",
                "items": {
                  "title": "Skill",
                  "description": "Skill",
                  "required": [ "skillId", "skillName" ],
                  "properties": {
                    "skillId": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Skill Id"
                    },
                    "skillName": {
                      "type": "string",
                      "description": "Skill Name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAgentMessagesResponse": {
      "title": " ",
      "description": "Message Result Set",
      "required": ["messages"],
      "properties": {
        "messages": {
          "type": "array",
          "description": "Collection of Messages",
          "items": {
            "title": "Message",
            "description": "Message",
            "required": ["messageId","messageText","expireTimer","messageHint","indicatorId","subject","validUntil","startDate"],
            "properties": {
              "messageId": {
                "type": "integer",
                "format": "int64",
                "description": "Message Id"
              },
              "messageText": {
                "type": "string",
                "format": "html",
                "description": "Message Text"
              },
              "expireTimer": {
                "type": "integer",
                "description": "Expire Timer"
              },
              "messageHint": {
                "type": "string",
                "description": "Message Hint"
              },
              "indicatorId": {
                "type": "integer",
                "description": "Indicator Id"
              },
              "subject": {
                "type": "string",
                "description": "Message Subject"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time",
                "description": "Message Valid Until Date"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "description": "Message Start Date"
              }
            }
          }
        }
      }
    },
    "getAgentIndicatorsResponse": {
      "title": " ",
      "description": "Indicator Result Set",
      "required": [ "indicators" ],
      "properties": {
        "indicators": {
          "type": "array",
          "description": "Collection of Indicators",
          "items": {
            "title": "Indicator",
            "description": "Indicator",
            "required": [ "indicatorName", "senderContactId", "imageFile", "actionType", "action", "toolTip", "enable" ],
            "properties": {
              "indicatorName": {
                "type": "string",
                "description": "Indicator Name"
              },
              "senderContactId": {
                "type": "integer",
                "description": "Sender Contact Id"
              },
              "imageFile": {
                "type": "string",
                "description": "Image File"
              },
              "actionType": {
                "type": "string",
                "description": "Action Type"
              },
              "action": {
                "type": "string",
                "description": "Action"
              },
              "toolTip": {
                "type": "string",
                "description": "Tooltip"
              },
              "enable": {
                "type": "boolean",
                "description": "Enable State"
              }
            }
          }
        }
      }
    },
    "getAgentPatternsResponse": {
      "title": " ",
      "description": "Collection of Agent Patterns",
      "required": [ "dialingPatterns" ],
      "properties": {
        "dialingPatterns": {
          "type": "array",
          "items": {
            "title": "DialingPattern",
            "description": "Collection of Dialing Patterns",
            "required": [ "patternId", "patternName", "input", "output" ],
            "properties": {
              "patternId": {
                "type": "integer",
                "description": "Dialing Pattern Id"
              },
              "patternName": {
                "type": "string",
                "description": "Dialing Pattern Name"
              },
              "input": {
                "type": "string",
                "description": "Dialing Pattern Input"
              },
              "output": {
                "type": "string",
                "description": "Dialing Pattern Output"
              }
            }
          }
        }
      }
    },
    "getAgentStatesResponse": {
      "title": " ",
      "description": "Collection of Agent States",
      "type": "object",
      "required": [ "agentStates" ],
      "properties": {
        "agentStates": {
          "type": "array",
          "items": {
            "title": "AgentState",
            "description": "Agent State",
            "required": [ "agentStateId", "agentStateName" ],
            "properties": {
              "agentStateId": {
                "type": "integer",
                "format": "int32",
                "description": "Agent State Id"
              },
              "agentStateName": {
                "type": "string",
                "description": "Agent State Name"
              }
            }
          }
        }
      }
    },
    "getTeamsResponse": {
      "title": " ",
      "type": "object",
      "required": ["resultSet"],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Team Result Set",
            "required": ["businessUnitId","lastPollTime","totalRecords","teams"],
            "properties": {
              "_links": {
                "schema": {
                  "title": "Links",
                  "description": "Links used to parse paginated response",
                  "required": ["self"],
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "businessUnitId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of Business Unit"
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the result set"
              },
              "teams": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "Team",
                  "description": "",
                  "required": ["teamId","teamName","isActive","description","notes","lastUpdateTime","inViewEnabled","wfoEnabled","wfmEnabled","qmEnabled","maxConcurrentChats","agentCount"],
                  "properties": {
                    "teamId": {
                      "type": "integer",
                      "description": "Team Id"
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Team Name"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Team Active State"
                    },
                    "description": {
                      "type": "string",
                      "description": "Team Description"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Team Notes"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Team record was last updated"
                    },
                    "inViewEnabled": {
                      "type": "boolean",
                      "description": "Team InView Enabled State"
                    },
                    "wfoEnabled": {
                      "type": "boolean",
                      "description": "TEam WFO Enabled State"
                    },
                    "wfmEnabled": {
                      "type": "boolean",
                      "description": "Team WFM Enabled State"
                    },
                    "qmEnabled": {
                      "type": "boolean",
                      "description": "TEam QM Enabled State"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Team Agent Max Concurrent Chats"
                    },
                    "agentCount": {
                      "type": "integer",
                      "description": "Team Agent Count"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postTeamsRequest": {
      "title": " ",
      "description": "Request",
      "type": "object",
      "required": [ "teamName" ],
      "properties": {
        "teamName": {
          "type": "string",
          "description": "Team Name"
        },
        "isActive": {
          "type": "boolean",
          "description": "Team Active State"
        },
        "description": {
          "type": "string",
          "description": "Team Description"
        },
        "notes": {
          "type": "string",
          "description": "Team Notes"
        },
        "inViewEnabled": {
          "type": "boolean",
          "description": "Team InView Enabled State"
        },
        "wfoEnabled": {
          "type": "boolean",
          "description": "TEam WFO Enabled State"
        },
        "wfmEnabled": {
          "type": "boolean",
          "description": "Team WFM Enabled State"
        },
        "qmEnabled": {
          "type": "boolean",
          "description": "TEam QM Enabled State"
        },
        "maxConcurrentChats": {
          "type": "integer",
          "description": "Team Agent Max Concurrent Chats"
        },
        "maxEmailInboxCount" : {
          "type": "integer",
          "description": "Maximum number of concurrent Emails in an inbox for this Team"
        },
        "inViewGamificationEnabled": {
          "type": "boolean",
          "description": "Indicates the Team can use inView gamification"
        },
        "inViewChatEnabled": {
          "type": "boolean",
          "description": "Indicates the Team can use inView chat messaging"
        },
        "inViewLMSEnabled": {
          "type": "boolean",
          "description": "Indicates the Team can use inView coaching and LMS"
        },
        "analyticsEnabled": {
          "type": "boolean",
          "description": "Indicates the Team will use inContact Analytics"
        }
      }
    },
    "postTeamsResponse": {
      "title": " ",
      "required": ["teamId"],
      "properties": {
        "teamId": {
          "type": "integer",
          "description": "Team Id"
        }
      }
    },
    "getTeamResponse": {
      "title": " ",
      "type": "object",
      "required": ["resultSet"],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Team Result Set",
            "required": ["businessUnitId","lastPollTime","teams"],
            "properties": {
               "businessUnitId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of Business Unit"
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
              },
              "teams": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "Team",
                  "description": "",
                  "required": ["teamId","teamName","isActive","description","notes","lastUpdateTime","inViewEnabled","wfoEnabled","wfmEnabled","qmEnabled","maxConcurrentChats","agentCount","agents"],
                  "properties": {
                    "teamId": {
                      "type": "integer",
                      "description": "Team Id"
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Team Name"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Team Active State"
                    },
                    "description": {
                      "type": "string",
                      "description": "Team Description"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Team Notes"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Team record was last updated"
                    },
                    "inViewEnabled": {
                      "type": "boolean",
                      "description": "Team InView Enabled State"
                    },
                    "wfoEnabled": {
                      "type": "boolean",
                      "description": "TEam WFO Enabled State"
                    },
                    "wfmEnabled": {
                      "type": "boolean",
                      "description": "Team WFM Enabled State"
                    },
                    "qmEnabled": {
                      "type": "boolean",
                      "description": "TEam QM Enabled State"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Team Agent Max Concurrent Chats"
                    },
                    "agentCount": {
                      "type": "integer",
                      "description": "Team Agent Count"
                    },
                    "agents": {
                      "type": "array",
                      "description": "Collection of Team Agents",
                      "items": {
                        "title": "Agent",
                        "description": "",
                        "required": ["agentId","firstName","lastName"],
                        "properties": {
                          "agentId": {
                            "type": "integer",
                            "description": "Agent Id"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Agent First Name"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Agent Last Name"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "putTeamsRequest": {
      "title": " ",
      "description": "Request",
      "type": "object",
      "properties": {
        "teamName": {
          "type": "string",
          "description": "Team Name"
        },
        "isActive": {
          "type": "boolean",
          "description": "Team Active State"
        },
        "notes": {
          "type": "string",
          "description": "Team Notes"
        },
        "inViewEnabled": {
          "type": "boolean",
          "description": "Team InView Enabled State"
        },
        "wfoEnabled": {
          "type": "boolean",
          "description": "TEam WFO Enabled State"
        },
        "wfmEnabled": {
          "type": "boolean",
          "description": "Team WFM Enabled State"
        },
        "qmEnabled": {
          "type": "boolean",
          "description": "TEam QM Enabled State"
        },
        "maxConcurrentChats": {
          "type": "integer",
          "description": "Team Agent Max Concurrent Chats"
        },
        "maxEmailInboxCount" : {
          "type": "integer",
          "description": "Maximum number of concurrent Emails in an inbox for this Team"
        },
        "inViewGamificationEnabled": {
          "type": "boolean",
          "description": "Indicates the Team can use inView gamification"
        },
        "inViewChatEnabled": {
          "type": "boolean",
          "description": "Indicates the Team can use inView chat messaging"
        },
        "inViewLMSEnabled": {
          "type": "boolean",
          "description": "Indicates the Team can use inView coaching and LMS"
        },
        "analyticsEnabled": {
          "type": "boolean",
          "description": "Indicates the Team will use inContact Analytics"
        }
      }
    },
    "postTeamAgentsRequest": {
      "title": " ",
      "description": "",
      "type": "object",
      "required": ["agents"],
      "properties": {
        "agents": {
          "type": "array",
          "description": "Collection of Agents",
          "items": {
            "title": "Agent",
            "required": [ "agentId" ],
            "properties": {
              "agentId": {
                "type": "integer",
                "description": "Agent Id"
              }
            }
          }
        }
      }
    },
    "postTeamAgentsResponse": {
      "title": " ",
      "type": "object",
      "required": ["resultSet"],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": ["errorCount","agentResults"],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of Agent assignments that had errors"
              },
              "agentResults": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "AgentResult",
                  "description": "Collection of Agent Results",
                  "required": ["success"],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the Agent assignment was successful"
                    },
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent assignments. Only returned if assignment was successful"
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Describes error in the Agent assignment. Only returned if assignment was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteTeamAgentsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "errorCount", "agentResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of Agent removals that had errors"
              },
              "agentResults": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "AgentResult",
                  "description": "Collection of Agent Results",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the Agent removal was successful"
                    },
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent removals. Only returned if removal was successful"
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Describes error in the Agent removal. Only returned if removal was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getTeamAgentsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Team Result Set",
            "required": [ "teams" ],
            "properties": {
              "teams": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "Team",
                  "description": "",
                  "required": [ "teamId", "teamName", "isActive", "description", "notes", "lastUpdateTime", "inViewEnabled", "wfoEnabled", "wfmEnabled", "qmEnabled", "maxConcurrentChats", "agentCount", "agents" ],
                  "properties": {
                    "teamId": {
                      "type": "integer",
                      "description": "Team Id"
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Team Name"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Team Active State"
                    },
                    "description": {
                      "type": "string",
                      "description": "Team Description"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Team Notes"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Team record was last updated"
                    },
                    "inViewEnabled": {
                      "type": "boolean",
                      "description": "Team InView Enabled State"
                    },
                    "wfoEnabled": {
                      "type": "boolean",
                      "description": "TEam WFO Enabled State"
                    },
                    "wfmEnabled": {
                      "type": "boolean",
                      "description": "Team WFM Enabled State"
                    },
                    "qmEnabled": {
                      "type": "boolean",
                      "description": "TEam QM Enabled State"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Team Agent Max Concurrent Chats"
                    },
                    "agentCount": {
                      "type": "integer",
                      "description": "Team Agent Count"
                    },
                    "agents": {
                      "type": "array",
                      "description": "Collection of Team Agents",
                      "items": {
                        "title": "Agent",
                        "description": "",
                        "required": [ "agentId", "firstName", "lastName" ],
                        "properties": {
                          "agentId": {
                            "type": "integer",
                            "description": "Agent Id"
                          },
                          "userName": {
                            "type": "string",
                            "description": "Agent User Name"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Agent First Name"
                          },
                          "middleName": {
                            "type": "string",
                            "description": "Agent Middle Name"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Agent Last Name"
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "Agent Email Address"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Is Agent Active"
                          },
                          "teamId": {
                            "type": "integer",
                            "description": "Agent Team Id"
                          },
                          "teamName": {
                            "type": "string",
                            "description": "Agent Team Name"
                          },
                          "reportToId": {
                            "type": "integer",
                            "description": "Agent Manager Id"
                          },
                          "isSupervisor": {
                            "type": "boolean",
                            "description": "Is Agent Supervisor"
                          },
                          "lastLogin": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Agent Last Login (ISO 8601 time)"
                          },
                          "lastModified": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Agent Last Modified (ISO 8601 time)"
                          },
                          "locationId": {
                            "type": "integer",
                            "description": "Agent Location Id"
                          },
                          "custom1": {
                            "type": "string",
                            "description": "Agent Custom Value 1"
                          },
                          "custom2": {
                            "type": "string",
                            "description": "Agent Custom Value 2"
                          },
                          "custom3": {
                            "type": "string",
                            "description": "Agent Custom Value 3"
                          },
                          "custom4": {
                            "type": "string",
                            "description": "Agent Custom Value 4"
                          },
                          "custom5": {
                            "type": "string",
                            "description": "Agent Custom Value 5"
                          },
                          "internalId": {
                            "type": "string",
                            "description": "Agent Custom Id"
                          },
                          "securityProfileId": {
                            "type": "integer",
                            "description": "Agent Security Profile Id"
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "Agent Timezone"
                          },
                          "country": {
                            "type": "string",
                            "description": "Agent Country Code"
                          },
                          "state": {
                            "type": "string",
                            "description": "Agent State or Province"
                          },
                          "city": {
                            "type": "string",
                            "description": "Agent City"
                          },
                          "chatRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a chat contact"
                          },
                          "phoneRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a phone contact"
                          },
                          "voiceMailRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a voicemail contact"
                          },
                          "workItemRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a workitem contact"
                          },
                          "defaultDialingPattern": {
                            "type": "integer",
                            "description": "Agent Dialing Pattern Id"
                          },
                          "teamDefaultMaxChats": {
                            "type": "boolean",
                            "description": "Indicates if Agent uses Team settings for max chats"
                          },
                          "maxConcurrentChats": {
                            "type": "integer",
                            "description": "Indicates number of chat contacts the Agent can accept concurrently"
                          },
                          "notes": {
                            "type": "string",
                            "description": "Agent Notes"
                          },
                          "hireDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Agent Hire Date (ISO 8601 time)"
                          },
                          "terminationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Agent Termination Date (ISO 8601 time)"
                          },
                          "hourlyCost": {
                            "type": "double",
                            "description": "Agent Hourly Cost"
                          },
                          "rehireStatus": {
                            "type": "boolean",
                            "description": "Agent Rehire Status"
                          },
                          "employmentType": {
                            "type": "integer",
                            "description": "Agent Employment Type Id"
                          },
                          "referral": {
                            "type": "string",
                            "description": "Agent Referral Description"
                          },
                          "atHome": {
                            "type": "boolean",
                            "description": "Agent Work at Home Status"
                          },
                          "hiringSource": {
                            "type": "string",
                            "description": "Agent Hiring Source"
                          },
                          "ntLoginName": {
                            "type": "string",
                            "description": ""
                          },
                          "scheduleNotification": {
                            "type": "integer",
                            "description": "Time between work schedule notifications",
                            "enum": [
                              "5",
                              "10",
                              "15"
                            ]
                          },
                          "federatedIdValue": {
                            "type": "string",
                            "description": "Agent Id in External Identity Provider.  Used with Federated Identity Management functionality"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getTeamUnavailableCodesResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "teamId", "teamName" ],
            "properties": {
              "teamId": {
                "type": "integer",
                "description": "Team Id"
              },
              "teamName": {
                "type": "string",
                "description": "Team Name"
              },
              "unavailableCodes": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "unavailableCodes",
                  "description": "",
                  "required": [ "outStateId", "outStateName", "isActive", "isAcw", "agentTimeoutMins" ],
                  "properties": {
                    "outStateId": {
                      "type": "integer",
                      "description": "The numeric ID of the outstate code"
                    },
                    "outStateName": {
                      "type": "string",
                      "description": "The name of the outstate code. When setting an agent session to an unavailable state, the actual state is always \"unavailable\", but you can supply the outstate description as well. Use this API call to retrieve possible outstates"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates whether or not the skill is active"
                    },
                    "isAcw": {
                      "type": "boolean",
                      "description": "Whether or not the unavailable code is used as an ACW state"
                    },
                    "agentTimeoutMins": {
                      "type": "integer",
                      "description": "If IsACW is true, this field indicates how long the agent will stay in the ACW state before being automatically moved to the next state. Note that if ACW is required (a property of the skill), this field has no meaning and is undefined"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postTeamUnavailableCodesRequest": {
      "title": " ",
      "description": "",
      "type": "object",
      "required": [ "codes" ],
      "properties": {
        "codes": {
          "type": "array",
          "description": "Collection of Unavailable Codes to assign",
          "items": {
            "title": "Code",
            "required": [ "outstateId" ],
            "properties": {
              "outstateId": {
                "type": "integer",
                "description": "Unavailable Code Id to assign"
              }
            }
          }
        }
      }
    },
    "postTeamUnavailableCodesResponse": {
      "title": " ",
      "type": "object",
      "required": ["resultSet"],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": ["errorCount","codeResults"],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of code assignments that had errors"
              },
              "codeResults": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "CodeResult",
                  "description": "",
                  "required": ["success"],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the code assignments was successful"
                    },
                    "outstateId": {
                      "type": "integer",
                      "description": "Unavailable Code Id assigned. Only returned if assignment was successful"
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Describes error in the code assignments. Only returned if assignment was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteTeamUnavailableCodesRequest": {
      "title": " ",
      "description": "",
      "type": "object",
      "required": [ "codes" ],
      "properties": {
        "codes": {
          "type": "array",
          "description": "Collection of Unavailable Codes to remove",
          "items": {
            "title": "Code",
            "required": [ "outstateId" ],
            "properties": {
              "outstateId": {
                "type": "integer",
                "description": "Unavailable Code Id to remove"
              }
            }
          }
        }
      }
    },
    "deleteTeamUnavailableCodesResponse": {
      "title": " ",
      "type": "object",
      "required": ["resultSet"],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": ["errorCount","codeResults"],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of code removals that had errors"
              },
              "codeResults": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "CodeResult",
                  "description": "",
                  "required": ["success"],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the code removal was successful"
                    },
                    "outstateId": {
                      "type": "integer",
                      "description": "Unavailable Code Id removed. Only returned if removal was successful"
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Describes error in the code removal. Only returned if removal was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
